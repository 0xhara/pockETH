"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/pony-cause";
exports.ids = ["vendor-chunks/pony-cause"];
exports.modules = {

/***/ "(ssr)/./node_modules/pony-cause/index.js":
/*!******************************************!*\
  !*** ./node_modules/pony-cause/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { ErrorWithCause } = __webpack_require__(/*! ./lib/error-with-cause */ \"(ssr)/./node_modules/pony-cause/lib/error-with-cause.js\"); // linemod-replace-with: export { ErrorWithCause } from './lib/error-with-cause.mjs';\nconst { findCauseByReference, getErrorCause, messageWithCauses, stackWithCauses } = __webpack_require__(/*! ./lib/helpers */ \"(ssr)/./node_modules/pony-cause/lib/helpers.js\"); // linemod-replace-with: } from './lib/helpers.mjs';\nmodule.exports = {\n    ErrorWithCause,\n    findCauseByReference,\n    getErrorCause,\n    stackWithCauses,\n    messageWithCauses\n}; // linemod-remove\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9ueS1jYXVzZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU0sRUFBRUEsY0FBYyxFQUFFLEdBQUdDLG1CQUFPQSxDQUFDLDBGQUEyQixxRkFBcUY7QUFFbkosTUFBTSxFQUNKQyxvQkFBb0IsRUFDcEJDLGFBQWEsRUFDYkMsaUJBQWlCLEVBQ2pCQyxlQUFlLEVBQ2hCLEdBQUdKLG1CQUFPQSxDQUFDLHdFQUFrQixvREFBb0Q7QUFFbEZLLE9BQU9DLE9BQU8sR0FBRztJQUNmUDtJQUNBRTtJQUNBQztJQUNBRTtJQUNBRDtBQUNGLEdBQXdCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvY2tldGgvLi9ub2RlX21vZHVsZXMvcG9ueS1jYXVzZS9pbmRleC5qcz8xNTRjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgeyBFcnJvcldpdGhDYXVzZSB9ID0gcmVxdWlyZSgnLi9saWIvZXJyb3Itd2l0aC1jYXVzZScpOyAvLyBsaW5lbW9kLXJlcGxhY2Utd2l0aDogZXhwb3J0IHsgRXJyb3JXaXRoQ2F1c2UgfSBmcm9tICcuL2xpYi9lcnJvci13aXRoLWNhdXNlLm1qcyc7XG5cbmNvbnN0IHsgLy8gbGluZW1vZC1yZXBsYWNlLXdpdGg6IGV4cG9ydCB7XG4gIGZpbmRDYXVzZUJ5UmVmZXJlbmNlLFxuICBnZXRFcnJvckNhdXNlLFxuICBtZXNzYWdlV2l0aENhdXNlcyxcbiAgc3RhY2tXaXRoQ2F1c2VzLFxufSA9IHJlcXVpcmUoJy4vbGliL2hlbHBlcnMnKTsgLy8gbGluZW1vZC1yZXBsYWNlLXdpdGg6IH0gZnJvbSAnLi9saWIvaGVscGVycy5tanMnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHsgICAgICAvLyBsaW5lbW9kLXJlbW92ZVxuICBFcnJvcldpdGhDYXVzZSwgICAgICAgLy8gbGluZW1vZC1yZW1vdmVcbiAgZmluZENhdXNlQnlSZWZlcmVuY2UsIC8vIGxpbmVtb2QtcmVtb3ZlXG4gIGdldEVycm9yQ2F1c2UsICAgICAgICAvLyBsaW5lbW9kLXJlbW92ZVxuICBzdGFja1dpdGhDYXVzZXMsICAgICAgLy8gbGluZW1vZC1yZW1vdmVcbiAgbWVzc2FnZVdpdGhDYXVzZXMsICAgIC8vIGxpbmVtb2QtcmVtb3ZlXG59OyAgICAgICAgICAgICAgICAgICAgICAvLyBsaW5lbW9kLXJlbW92ZVxuIl0sIm5hbWVzIjpbIkVycm9yV2l0aENhdXNlIiwicmVxdWlyZSIsImZpbmRDYXVzZUJ5UmVmZXJlbmNlIiwiZ2V0RXJyb3JDYXVzZSIsIm1lc3NhZ2VXaXRoQ2F1c2VzIiwic3RhY2tXaXRoQ2F1c2VzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pony-cause/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pony-cause/lib/error-with-cause.js":
/*!*********************************************************!*\
  !*** ./node_modules/pony-cause/lib/error-with-cause.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("\n/** @template [T=undefined] */ class ErrorWithCause extends Error {\n    /**\n   * @param {string} message\n   * @param {{ cause?: T }} options\n   */ constructor(message, { cause } = {}){\n        super(message);\n        /** @type {string} */ this.name = ErrorWithCause.name;\n        if (cause) {\n            /** @type {T} */ this.cause = cause;\n        }\n        /** @type {string} */ this.message = message;\n    }\n}\nmodule.exports = {\n    ErrorWithCause\n}; // linemod-remove\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9ueS1jYXVzZS9saWIvZXJyb3Itd2l0aC1jYXVzZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLDRCQUE0QixHQUM1QixNQUFNQSx1QkFBdUJDO0lBQzNCOzs7R0FHQyxHQUNEQyxZQUFhQyxPQUFPLEVBQUUsRUFBRUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUU7UUFDcEMsS0FBSyxDQUFDRDtRQUVOLG1CQUFtQixHQUNuQixJQUFJLENBQUNFLElBQUksR0FBR0wsZUFBZUssSUFBSTtRQUMvQixJQUFJRCxPQUFPO1lBQ1QsY0FBYyxHQUNkLElBQUksQ0FBQ0EsS0FBSyxHQUFHQTtRQUNmO1FBQ0EsbUJBQW1CLEdBQ25CLElBQUksQ0FBQ0QsT0FBTyxHQUFHQTtJQUNqQjtBQUNGO0FBRUFHLE9BQU9DLE9BQU8sR0FBRztJQUNmUDtBQUNGLEdBQXdCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvY2tldGgvLi9ub2RlX21vZHVsZXMvcG9ueS1jYXVzZS9saWIvZXJyb3Itd2l0aC1jYXVzZS5qcz82ODk0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqIEB0ZW1wbGF0ZSBbVD11bmRlZmluZWRdICovXG5jbGFzcyBFcnJvcldpdGhDYXVzZSBleHRlbmRzIEVycm9yIHsgLy8gbGluZW1vZC1wcmVmaXgtd2l0aDogZXhwb3J0XG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZVxuICAgKiBAcGFyYW0ge3sgY2F1c2U/OiBUIH19IG9wdGlvbnNcbiAgICovXG4gIGNvbnN0cnVjdG9yIChtZXNzYWdlLCB7IGNhdXNlIH0gPSB7fSkge1xuICAgIHN1cGVyKG1lc3NhZ2UpO1xuXG4gICAgLyoqIEB0eXBlIHtzdHJpbmd9ICovXG4gICAgdGhpcy5uYW1lID0gRXJyb3JXaXRoQ2F1c2UubmFtZTtcbiAgICBpZiAoY2F1c2UpIHtcbiAgICAgIC8qKiBAdHlwZSB7VH0gKi9cbiAgICAgIHRoaXMuY2F1c2UgPSBjYXVzZTtcbiAgICB9XG4gICAgLyoqIEB0eXBlIHtzdHJpbmd9ICovXG4gICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHsgICAgICAvLyBsaW5lbW9kLXJlbW92ZVxuICBFcnJvcldpdGhDYXVzZSwgICAgICAgLy8gbGluZW1vZC1yZW1vdmVcbn07ICAgICAgICAgICAgICAgICAgICAgIC8vIGxpbmVtb2QtcmVtb3ZlXG4iXSwibmFtZXMiOlsiRXJyb3JXaXRoQ2F1c2UiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwibWVzc2FnZSIsImNhdXNlIiwibmFtZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pony-cause/lib/error-with-cause.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pony-cause/lib/helpers.js":
/*!************************************************!*\
  !*** ./node_modules/pony-cause/lib/helpers.js ***!
  \************************************************/
/***/ ((module) => {

eval("\n/**\n * @template {Error} T\n * @param {unknown} err\n * @param {new(...args: any[]) => T} reference\n * @returns {T|undefined}\n */ const findCauseByReference = (err, reference)=>{\n    if (!err || !reference) return;\n    if (!(err instanceof Error)) return;\n    if (!(reference.prototype instanceof Error) && // @ts-ignore\n    reference !== Error) return;\n    /**\n   * Ensures we don't go circular\n   *\n   * @type {Set<Error>}\n   */ const seen = new Set();\n    /** @type {Error|undefined} */ let currentErr = err;\n    while(currentErr && !seen.has(currentErr)){\n        seen.add(currentErr);\n        if (currentErr instanceof reference) {\n            return currentErr;\n        }\n        currentErr = getErrorCause(currentErr);\n    }\n};\n/**\n * @param {Error|{ cause?: unknown|(()=>err)}} err\n * @returns {Error|undefined}\n */ const getErrorCause = (err)=>{\n    if (!err || typeof err !== \"object\" || !(\"cause\" in err)) {\n        return;\n    }\n    // VError / NError style causes\n    if (typeof err.cause === \"function\") {\n        const causeResult = err.cause();\n        return causeResult instanceof Error ? causeResult : undefined;\n    } else {\n        return err.cause instanceof Error ? err.cause : undefined;\n    }\n};\n/**\n * Internal method that keeps a track of which error we have already added, to avoid circular recursion\n *\n * @private\n * @param {Error} err\n * @param {Set<Error>} seen\n * @returns {string}\n */ const _stackWithCauses = (err, seen)=>{\n    if (!(err instanceof Error)) return \"\";\n    const stack = err.stack || \"\";\n    // Ensure we don't go circular or crazily deep\n    if (seen.has(err)) {\n        return stack + \"\\ncauses have become circular...\";\n    }\n    const cause = getErrorCause(err);\n    // TODO: Follow up in https://github.com/nodejs/node/issues/38725#issuecomment-920309092 on how to log stuff\n    if (cause) {\n        seen.add(err);\n        return stack + \"\\ncaused by: \" + _stackWithCauses(cause, seen);\n    } else {\n        return stack;\n    }\n};\n/**\n * @param {Error} err\n * @returns {string}\n */ const stackWithCauses = (err)=>_stackWithCauses(err, new Set()); // linemod-prefix-with: export\n/**\n * Internal method that keeps a track of which error we have already added, to avoid circular recursion\n *\n * @private\n * @param {Error} err\n * @param {Set<Error>} seen\n * @param {boolean} [skip]\n * @returns {string}\n */ const _messageWithCauses = (err, seen, skip)=>{\n    if (!(err instanceof Error)) return \"\";\n    const message = skip ? \"\" : err.message || \"\";\n    // Ensure we don't go circular or crazily deep\n    if (seen.has(err)) {\n        return message + \": ...\";\n    }\n    const cause = getErrorCause(err);\n    if (cause) {\n        seen.add(err);\n        const skipIfVErrorStyleCause = \"cause\" in err && typeof err.cause === \"function\";\n        return message + (skipIfVErrorStyleCause ? \"\" : \": \") + _messageWithCauses(cause, seen, skipIfVErrorStyleCause);\n    } else {\n        return message;\n    }\n};\n/**\n * @param {Error} err\n * @returns {string}\n */ const messageWithCauses = (err)=>_messageWithCauses(err, new Set()); // linemod-prefix-with: export\nmodule.exports = {\n    findCauseByReference,\n    getErrorCause,\n    stackWithCauses,\n    messageWithCauses\n}; // linemod-remove\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9ueS1jYXVzZS9saWIvaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBOzs7OztDQUtDLEdBQ0QsTUFBTUEsdUJBQXVCLENBQUNDLEtBQUtDO0lBQ2pDLElBQUksQ0FBQ0QsT0FBTyxDQUFDQyxXQUFXO0lBQ3hCLElBQUksQ0FBRUQsQ0FBQUEsZUFBZUUsS0FBSSxHQUFJO0lBQzdCLElBQ0UsQ0FBRUQsQ0FBQUEsVUFBVUUsU0FBUyxZQUFZRCxLQUFJLEtBQ3JDLGFBQWE7SUFDYkQsY0FBY0MsT0FDZDtJQUVGOzs7O0dBSUMsR0FDRCxNQUFNRSxPQUFPLElBQUlDO0lBRWpCLDRCQUE0QixHQUM1QixJQUFJQyxhQUFhTjtJQUVqQixNQUFPTSxjQUFjLENBQUNGLEtBQUtHLEdBQUcsQ0FBQ0QsWUFBYTtRQUMxQ0YsS0FBS0ksR0FBRyxDQUFDRjtRQUVULElBQUlBLHNCQUFzQkwsV0FBVztZQUNuQyxPQUFPSztRQUNUO1FBRUFBLGFBQWFHLGNBQWNIO0lBQzdCO0FBQ0Y7QUFFQTs7O0NBR0MsR0FDRCxNQUFNRyxnQkFBZ0IsQ0FBQ1Q7SUFDckIsSUFBSSxDQUFDQSxPQUFPLE9BQU9BLFFBQVEsWUFBWSxDQUFFLFlBQVdBLEdBQUUsR0FBSTtRQUN4RDtJQUNGO0lBRUEsK0JBQStCO0lBQy9CLElBQUksT0FBT0EsSUFBSVUsS0FBSyxLQUFLLFlBQVk7UUFDbkMsTUFBTUMsY0FBY1gsSUFBSVUsS0FBSztRQUU3QixPQUFPQyx1QkFBdUJULFFBQzFCUyxjQUNBQztJQUNOLE9BQU87UUFDTCxPQUFPWixJQUFJVSxLQUFLLFlBQVlSLFFBQ3hCRixJQUFJVSxLQUFLLEdBQ1RFO0lBQ047QUFDRjtBQUVBOzs7Ozs7O0NBT0MsR0FDRCxNQUFNQyxtQkFBbUIsQ0FBQ2IsS0FBS0k7SUFDN0IsSUFBSSxDQUFFSixDQUFBQSxlQUFlRSxLQUFJLEdBQUksT0FBTztJQUVwQyxNQUFNWSxRQUFRZCxJQUFJYyxLQUFLLElBQUk7SUFFM0IsOENBQThDO0lBQzlDLElBQUlWLEtBQUtHLEdBQUcsQ0FBQ1AsTUFBTTtRQUNqQixPQUFPYyxRQUFRO0lBQ2pCO0lBRUEsTUFBTUosUUFBUUQsY0FBY1Q7SUFFNUIsNEdBQTRHO0lBRTVHLElBQUlVLE9BQU87UUFDVE4sS0FBS0ksR0FBRyxDQUFDUjtRQUNULE9BQVFjLFFBQVEsa0JBQWtCRCxpQkFBaUJILE9BQU9OO0lBQzVELE9BQU87UUFDTCxPQUFPVTtJQUNUO0FBQ0Y7QUFFQTs7O0NBR0MsR0FDRCxNQUFNQyxrQkFBa0IsQ0FBQ2YsTUFBUWEsaUJBQWlCYixLQUFLLElBQUlLLFFBQVEsOEJBQThCO0FBRWpHOzs7Ozs7OztDQVFDLEdBQ0QsTUFBTVcscUJBQXFCLENBQUNoQixLQUFLSSxNQUFNYTtJQUNyQyxJQUFJLENBQUVqQixDQUFBQSxlQUFlRSxLQUFJLEdBQUksT0FBTztJQUVwQyxNQUFNZ0IsVUFBVUQsT0FBTyxLQUFNakIsSUFBSWtCLE9BQU8sSUFBSTtJQUU1Qyw4Q0FBOEM7SUFDOUMsSUFBSWQsS0FBS0csR0FBRyxDQUFDUCxNQUFNO1FBQ2pCLE9BQU9rQixVQUFVO0lBQ25CO0lBRUEsTUFBTVIsUUFBUUQsY0FBY1Q7SUFFNUIsSUFBSVUsT0FBTztRQUNUTixLQUFLSSxHQUFHLENBQUNSO1FBRVQsTUFBTW1CLHlCQUF5QixXQUFXbkIsT0FBTyxPQUFPQSxJQUFJVSxLQUFLLEtBQUs7UUFFdEUsT0FBUVEsVUFDTEMsQ0FBQUEseUJBQXlCLEtBQUssSUFBRyxJQUNsQ0gsbUJBQW1CTixPQUFPTixNQUFNZTtJQUNwQyxPQUFPO1FBQ0wsT0FBT0Q7SUFDVDtBQUNGO0FBRUE7OztDQUdDLEdBQ0QsTUFBTUUsb0JBQW9CLENBQUNwQixNQUFRZ0IsbUJBQW1CaEIsS0FBSyxJQUFJSyxRQUFRLDhCQUE4QjtBQUVyR2dCLE9BQU9DLE9BQU8sR0FBRztJQUNmdkI7SUFDQVU7SUFDQU07SUFDQUs7QUFDRixHQUF3QixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb2NrZXRoLy4vbm9kZV9tb2R1bGVzL3BvbnktY2F1c2UvbGliL2hlbHBlcnMuanM/YzhmYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQHRlbXBsYXRlIHtFcnJvcn0gVFxuICogQHBhcmFtIHt1bmtub3dufSBlcnJcbiAqIEBwYXJhbSB7bmV3KC4uLmFyZ3M6IGFueVtdKSA9PiBUfSByZWZlcmVuY2VcbiAqIEByZXR1cm5zIHtUfHVuZGVmaW5lZH1cbiAqL1xuY29uc3QgZmluZENhdXNlQnlSZWZlcmVuY2UgPSAoZXJyLCByZWZlcmVuY2UpID0+IHsgLy8gbGluZW1vZC1wcmVmaXgtd2l0aDogZXhwb3J0XG4gIGlmICghZXJyIHx8ICFyZWZlcmVuY2UpIHJldHVybjtcbiAgaWYgKCEoZXJyIGluc3RhbmNlb2YgRXJyb3IpKSByZXR1cm47XG4gIGlmIChcbiAgICAhKHJlZmVyZW5jZS5wcm90b3R5cGUgaW5zdGFuY2VvZiBFcnJvcikgJiZcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgcmVmZXJlbmNlICE9PSBFcnJvclxuICApIHJldHVybjtcblxuICAvKipcbiAgICogRW5zdXJlcyB3ZSBkb24ndCBnbyBjaXJjdWxhclxuICAgKlxuICAgKiBAdHlwZSB7U2V0PEVycm9yPn1cbiAgICovXG4gIGNvbnN0IHNlZW4gPSBuZXcgU2V0KCk7XG5cbiAgLyoqIEB0eXBlIHtFcnJvcnx1bmRlZmluZWR9ICovXG4gIGxldCBjdXJyZW50RXJyID0gZXJyO1xuXG4gIHdoaWxlIChjdXJyZW50RXJyICYmICFzZWVuLmhhcyhjdXJyZW50RXJyKSkge1xuICAgIHNlZW4uYWRkKGN1cnJlbnRFcnIpO1xuXG4gICAgaWYgKGN1cnJlbnRFcnIgaW5zdGFuY2VvZiByZWZlcmVuY2UpIHtcbiAgICAgIHJldHVybiBjdXJyZW50RXJyO1xuICAgIH1cblxuICAgIGN1cnJlbnRFcnIgPSBnZXRFcnJvckNhdXNlKGN1cnJlbnRFcnIpO1xuICB9XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7RXJyb3J8eyBjYXVzZT86IHVua25vd258KCgpPT5lcnIpfX0gZXJyXG4gKiBAcmV0dXJucyB7RXJyb3J8dW5kZWZpbmVkfVxuICovXG5jb25zdCBnZXRFcnJvckNhdXNlID0gKGVycikgPT4geyAvLyBsaW5lbW9kLXByZWZpeC13aXRoOiBleHBvcnRcbiAgaWYgKCFlcnIgfHwgdHlwZW9mIGVyciAhPT0gJ29iamVjdCcgfHwgISgnY2F1c2UnIGluIGVycikpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBWRXJyb3IgLyBORXJyb3Igc3R5bGUgY2F1c2VzXG4gIGlmICh0eXBlb2YgZXJyLmNhdXNlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY29uc3QgY2F1c2VSZXN1bHQgPSBlcnIuY2F1c2UoKTtcblxuICAgIHJldHVybiBjYXVzZVJlc3VsdCBpbnN0YW5jZW9mIEVycm9yXG4gICAgICA/IGNhdXNlUmVzdWx0XG4gICAgICA6IHVuZGVmaW5lZDtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZXJyLmNhdXNlIGluc3RhbmNlb2YgRXJyb3JcbiAgICAgID8gZXJyLmNhdXNlXG4gICAgICA6IHVuZGVmaW5lZDtcbiAgfVxufTtcblxuLyoqXG4gKiBJbnRlcm5hbCBtZXRob2QgdGhhdCBrZWVwcyBhIHRyYWNrIG9mIHdoaWNoIGVycm9yIHdlIGhhdmUgYWxyZWFkeSBhZGRlZCwgdG8gYXZvaWQgY2lyY3VsYXIgcmVjdXJzaW9uXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7RXJyb3J9IGVyclxuICogQHBhcmFtIHtTZXQ8RXJyb3I+fSBzZWVuXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG5jb25zdCBfc3RhY2tXaXRoQ2F1c2VzID0gKGVyciwgc2VlbikgPT4ge1xuICBpZiAoIShlcnIgaW5zdGFuY2VvZiBFcnJvcikpIHJldHVybiAnJztcblxuICBjb25zdCBzdGFjayA9IGVyci5zdGFjayB8fCAnJztcblxuICAvLyBFbnN1cmUgd2UgZG9uJ3QgZ28gY2lyY3VsYXIgb3IgY3JhemlseSBkZWVwXG4gIGlmIChzZWVuLmhhcyhlcnIpKSB7XG4gICAgcmV0dXJuIHN0YWNrICsgJ1xcbmNhdXNlcyBoYXZlIGJlY29tZSBjaXJjdWxhci4uLic7XG4gIH1cblxuICBjb25zdCBjYXVzZSA9IGdldEVycm9yQ2F1c2UoZXJyKTtcblxuICAvLyBUT0RPOiBGb2xsb3cgdXAgaW4gaHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlL2lzc3Vlcy8zODcyNSNpc3N1ZWNvbW1lbnQtOTIwMzA5MDkyIG9uIGhvdyB0byBsb2cgc3R1ZmZcblxuICBpZiAoY2F1c2UpIHtcbiAgICBzZWVuLmFkZChlcnIpO1xuICAgIHJldHVybiAoc3RhY2sgKyAnXFxuY2F1c2VkIGJ5OiAnICsgX3N0YWNrV2l0aENhdXNlcyhjYXVzZSwgc2VlbikpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBzdGFjaztcbiAgfVxufTtcblxuLyoqXG4gKiBAcGFyYW0ge0Vycm9yfSBlcnJcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbmNvbnN0IHN0YWNrV2l0aENhdXNlcyA9IChlcnIpID0+IF9zdGFja1dpdGhDYXVzZXMoZXJyLCBuZXcgU2V0KCkpOyAvLyBsaW5lbW9kLXByZWZpeC13aXRoOiBleHBvcnRcblxuLyoqXG4gKiBJbnRlcm5hbCBtZXRob2QgdGhhdCBrZWVwcyBhIHRyYWNrIG9mIHdoaWNoIGVycm9yIHdlIGhhdmUgYWxyZWFkeSBhZGRlZCwgdG8gYXZvaWQgY2lyY3VsYXIgcmVjdXJzaW9uXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7RXJyb3J9IGVyclxuICogQHBhcmFtIHtTZXQ8RXJyb3I+fSBzZWVuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtza2lwXVxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuY29uc3QgX21lc3NhZ2VXaXRoQ2F1c2VzID0gKGVyciwgc2Vlbiwgc2tpcCkgPT4ge1xuICBpZiAoIShlcnIgaW5zdGFuY2VvZiBFcnJvcikpIHJldHVybiAnJztcblxuICBjb25zdCBtZXNzYWdlID0gc2tpcCA/ICcnIDogKGVyci5tZXNzYWdlIHx8ICcnKTtcblxuICAvLyBFbnN1cmUgd2UgZG9uJ3QgZ28gY2lyY3VsYXIgb3IgY3JhemlseSBkZWVwXG4gIGlmIChzZWVuLmhhcyhlcnIpKSB7XG4gICAgcmV0dXJuIG1lc3NhZ2UgKyAnOiAuLi4nO1xuICB9XG5cbiAgY29uc3QgY2F1c2UgPSBnZXRFcnJvckNhdXNlKGVycik7XG5cbiAgaWYgKGNhdXNlKSB7XG4gICAgc2Vlbi5hZGQoZXJyKTtcblxuICAgIGNvbnN0IHNraXBJZlZFcnJvclN0eWxlQ2F1c2UgPSAnY2F1c2UnIGluIGVyciAmJiB0eXBlb2YgZXJyLmNhdXNlID09PSAnZnVuY3Rpb24nO1xuXG4gICAgcmV0dXJuIChtZXNzYWdlICtcbiAgICAgIChza2lwSWZWRXJyb3JTdHlsZUNhdXNlID8gJycgOiAnOiAnKSArXG4gICAgICBfbWVzc2FnZVdpdGhDYXVzZXMoY2F1c2UsIHNlZW4sIHNraXBJZlZFcnJvclN0eWxlQ2F1c2UpKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbWVzc2FnZTtcbiAgfVxufTtcblxuLyoqXG4gKiBAcGFyYW0ge0Vycm9yfSBlcnJcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbmNvbnN0IG1lc3NhZ2VXaXRoQ2F1c2VzID0gKGVycikgPT4gX21lc3NhZ2VXaXRoQ2F1c2VzKGVyciwgbmV3IFNldCgpKTsgLy8gbGluZW1vZC1wcmVmaXgtd2l0aDogZXhwb3J0XG5cbm1vZHVsZS5leHBvcnRzID0geyAgICAgIC8vIGxpbmVtb2QtcmVtb3ZlXG4gIGZpbmRDYXVzZUJ5UmVmZXJlbmNlLCAvLyBsaW5lbW9kLXJlbW92ZVxuICBnZXRFcnJvckNhdXNlLCAgICAgICAgLy8gbGluZW1vZC1yZW1vdmVcbiAgc3RhY2tXaXRoQ2F1c2VzLCAgICAgIC8vIGxpbmVtb2QtcmVtb3ZlXG4gIG1lc3NhZ2VXaXRoQ2F1c2VzLCAgICAvLyBsaW5lbW9kLXJlbW92ZVxufTsgICAgICAgICAgICAgICAgICAgICAgLy8gbGluZW1vZC1yZW1vdmVcbiJdLCJuYW1lcyI6WyJmaW5kQ2F1c2VCeVJlZmVyZW5jZSIsImVyciIsInJlZmVyZW5jZSIsIkVycm9yIiwicHJvdG90eXBlIiwic2VlbiIsIlNldCIsImN1cnJlbnRFcnIiLCJoYXMiLCJhZGQiLCJnZXRFcnJvckNhdXNlIiwiY2F1c2UiLCJjYXVzZVJlc3VsdCIsInVuZGVmaW5lZCIsIl9zdGFja1dpdGhDYXVzZXMiLCJzdGFjayIsInN0YWNrV2l0aENhdXNlcyIsIl9tZXNzYWdlV2l0aENhdXNlcyIsInNraXAiLCJtZXNzYWdlIiwic2tpcElmVkVycm9yU3R5bGVDYXVzZSIsIm1lc3NhZ2VXaXRoQ2F1c2VzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pony-cause/lib/helpers.js\n");

/***/ })

};
;