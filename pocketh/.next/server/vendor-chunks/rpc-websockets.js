"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/rpc-websockets";
exports.ids = ["vendor-chunks/rpc-websockets"];
exports.modules = {

/***/ "(ssr)/./node_modules/rpc-websockets/dist/lib/client.js":
/*!********************************************************!*\
  !*** ./node_modules/rpc-websockets/dist/lib/client.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */ \nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"(ssr)/./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(ssr)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\nvar _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ \"(ssr)/./node_modules/@babel/runtime/helpers/typeof.js\"));\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"(ssr)/./node_modules/@babel/runtime/helpers/classCallCheck.js\"));\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \"(ssr)/./node_modules/@babel/runtime/helpers/createClass.js\"));\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \"(ssr)/./node_modules/@babel/runtime/helpers/inherits.js\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"(ssr)/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\"));\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"(ssr)/./node_modules/@babel/runtime/helpers/getPrototypeOf.js\"));\nvar _eventemitter = __webpack_require__(/*! eventemitter3 */ \"(ssr)/./node_modules/rpc-websockets/node_modules/eventemitter3/index.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/rpc-websockets/dist/lib/utils.js\");\nfunction _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n        var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n    };\n}\nfunction _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\nvar __rest = (void 0) && (void 0).__rest || function(s, e) {\n    var t = {};\n    for(var p in s){\n        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    }\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\n// @ts-ignore\nvar CommonClient = /*#__PURE__*/ function(_EventEmitter) {\n    (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n    var _super = _createSuper(CommonClient);\n    /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @param {DataPack} dataPack - data pack contains encoder and decoder\n   * @return {CommonClient}\n   */ function CommonClient(webSocketFactory) {\n        var _this;\n        var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n        var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n        var dataPack = arguments.length > 4 ? arguments[4] : undefined;\n        (0, _classCallCheck2[\"default\"])(this, CommonClient);\n        var _a$autoconnect = _a.autoconnect, autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect, _a$reconnect = _a.reconnect, reconnect = _a$reconnect === void 0 ? true : _a$reconnect, _a$reconnect_interval = _a.reconnect_interval, reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval, _a$max_reconnects = _a.max_reconnects, max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects, rest_options = __rest(_a, [\n            \"autoconnect\",\n            \"reconnect\",\n            \"reconnect_interval\",\n            \"max_reconnects\"\n        ]);\n        _this = _super.call(this);\n        _this.webSocketFactory = webSocketFactory;\n        _this.queue = {};\n        _this.rpc_id = 0;\n        _this.address = address;\n        _this.autoconnect = autoconnect;\n        _this.ready = false;\n        _this.reconnect = reconnect;\n        _this.reconnect_timer_id = undefined;\n        _this.reconnect_interval = reconnect_interval;\n        _this.max_reconnects = max_reconnects;\n        _this.rest_options = rest_options;\n        _this.current_reconnects = 0;\n        _this.generate_request_id = generate_request_id || function() {\n            return ++_this.rpc_id;\n        };\n        if (!dataPack) _this.dataPack = new _utils.DefaultDataPack();\n        else _this.dataPack = dataPack;\n        if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n            autoconnect: _this.autoconnect,\n            reconnect: _this.reconnect,\n            reconnect_interval: _this.reconnect_interval,\n            max_reconnects: _this.max_reconnects\n        }, _this.rest_options));\n        return _this;\n    }\n    /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */ (0, _createClass2[\"default\"])(CommonClient, [\n        {\n            key: \"connect\",\n            value: function connect() {\n                if (this.socket) return;\n                this._connect(this.address, Object.assign({\n                    autoconnect: this.autoconnect,\n                    reconnect: this.reconnect,\n                    reconnect_interval: this.reconnect_interval,\n                    max_reconnects: this.max_reconnects\n                }, this.rest_options));\n            }\n        },\n        {\n            key: \"call\",\n            value: function call(method, params, timeout, ws_opts) {\n                var _this2 = this;\n                if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n                    ws_opts = timeout;\n                    timeout = null;\n                }\n                return new Promise(function(resolve, reject) {\n                    if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n                    var rpc_id = _this2.generate_request_id(method, params);\n                    var message = {\n                        jsonrpc: \"2.0\",\n                        method: method,\n                        params: params || undefined,\n                        id: rpc_id\n                    };\n                    _this2.socket.send(_this2.dataPack.encode(message), ws_opts, function(error) {\n                        if (error) return reject(error);\n                        _this2.queue[rpc_id] = {\n                            promise: [\n                                resolve,\n                                reject\n                            ]\n                        };\n                        if (timeout) {\n                            _this2.queue[rpc_id].timeout = setTimeout(function() {\n                                delete _this2.queue[rpc_id];\n                                reject(new Error(\"reply timeout\"));\n                            }, timeout);\n                        }\n                    });\n                });\n            }\n        },\n        {\n            key: \"login\",\n            value: function() {\n                var _login = (0, _asyncToGenerator2[\"default\"])(/*#__PURE__*/ _regenerator[\"default\"].mark(function _callee(params) {\n                    var resp;\n                    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                        while(1){\n                            switch(_context.prev = _context.next){\n                                case 0:\n                                    _context.next = 2;\n                                    return this.call(\"rpc.login\", params);\n                                case 2:\n                                    resp = _context.sent;\n                                    if (resp) {\n                                        _context.next = 5;\n                                        break;\n                                    }\n                                    throw new Error(\"authentication failed\");\n                                case 5:\n                                    return _context.abrupt(\"return\", resp);\n                                case 6:\n                                case \"end\":\n                                    return _context.stop();\n                            }\n                        }\n                    }, _callee, this);\n                }));\n                function login(_x) {\n                    return _login.apply(this, arguments);\n                }\n                return login;\n            }()\n        },\n        {\n            key: \"listMethods\",\n            value: function() {\n                var _listMethods = (0, _asyncToGenerator2[\"default\"])(/*#__PURE__*/ _regenerator[\"default\"].mark(function _callee2() {\n                    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n                        while(1){\n                            switch(_context2.prev = _context2.next){\n                                case 0:\n                                    _context2.next = 2;\n                                    return this.call(\"__listMethods\");\n                                case 2:\n                                    return _context2.abrupt(\"return\", _context2.sent);\n                                case 3:\n                                case \"end\":\n                                    return _context2.stop();\n                            }\n                        }\n                    }, _callee2, this);\n                }));\n                function listMethods() {\n                    return _listMethods.apply(this, arguments);\n                }\n                return listMethods;\n            }()\n        },\n        {\n            key: \"notify\",\n            value: function notify(method, params) {\n                var _this3 = this;\n                return new Promise(function(resolve, reject) {\n                    if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n                    var message = {\n                        jsonrpc: \"2.0\",\n                        method: method,\n                        params: params\n                    };\n                    _this3.socket.send(_this3.dataPack.encode(message), function(error) {\n                        if (error) return reject(error);\n                        resolve();\n                    });\n                });\n            }\n        },\n        {\n            key: \"subscribe\",\n            value: function() {\n                var _subscribe = (0, _asyncToGenerator2[\"default\"])(/*#__PURE__*/ _regenerator[\"default\"].mark(function _callee3(event) {\n                    var result;\n                    return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n                        while(1){\n                            switch(_context3.prev = _context3.next){\n                                case 0:\n                                    if (typeof event === \"string\") event = [\n                                        event\n                                    ];\n                                    _context3.next = 3;\n                                    return this.call(\"rpc.on\", event);\n                                case 3:\n                                    result = _context3.sent;\n                                    if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                                        _context3.next = 6;\n                                        break;\n                                    }\n                                    throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n                                case 6:\n                                    return _context3.abrupt(\"return\", result);\n                                case 7:\n                                case \"end\":\n                                    return _context3.stop();\n                            }\n                        }\n                    }, _callee3, this);\n                }));\n                function subscribe(_x2) {\n                    return _subscribe.apply(this, arguments);\n                }\n                return subscribe;\n            }()\n        },\n        {\n            key: \"unsubscribe\",\n            value: function() {\n                var _unsubscribe = (0, _asyncToGenerator2[\"default\"])(/*#__PURE__*/ _regenerator[\"default\"].mark(function _callee4(event) {\n                    var result;\n                    return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n                        while(1){\n                            switch(_context4.prev = _context4.next){\n                                case 0:\n                                    if (typeof event === \"string\") event = [\n                                        event\n                                    ];\n                                    _context4.next = 3;\n                                    return this.call(\"rpc.off\", event);\n                                case 3:\n                                    result = _context4.sent;\n                                    if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                                        _context4.next = 6;\n                                        break;\n                                    }\n                                    throw new Error(\"Failed unsubscribing from an event with: \" + result);\n                                case 6:\n                                    return _context4.abrupt(\"return\", result);\n                                case 7:\n                                case \"end\":\n                                    return _context4.stop();\n                            }\n                        }\n                    }, _callee4, this);\n                }));\n                function unsubscribe(_x3) {\n                    return _unsubscribe.apply(this, arguments);\n                }\n                return unsubscribe;\n            }()\n        },\n        {\n            key: \"close\",\n            value: function close(code, data) {\n                this.socket.close(code || 1000, data);\n            }\n        },\n        {\n            key: \"_connect\",\n            value: function _connect(address, options) {\n                var _this4 = this;\n                clearTimeout(this.reconnect_timer_id);\n                this.socket = this.webSocketFactory(address, options);\n                this.socket.addEventListener(\"open\", function() {\n                    _this4.ready = true;\n                    _this4.emit(\"open\");\n                    _this4.current_reconnects = 0;\n                });\n                this.socket.addEventListener(\"message\", function(_ref) {\n                    var message = _ref.data;\n                    if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n                    try {\n                        message = _this4.dataPack.decode(message);\n                    } catch (error) {\n                        return;\n                    }\n                    // check if any listeners are attached and forward event\n                    if (message.notification && _this4.listeners(message.notification).length) {\n                        if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n                        var args = [\n                            message.notification\n                        ];\n                        if (message.params.constructor === Object) args.push(message.params);\n                        else // using for-loop instead of unshift/spread because performance is better\n                        for(var i = 0; i < message.params.length; i++){\n                            args.push(message.params[i]);\n                        }\n                        // run as microtask so that pending queue messages are resolved first\n                        // eslint-disable-next-line prefer-spread\n                        return Promise.resolve().then(function() {\n                            _this4.emit.apply(_this4, args);\n                        });\n                    }\n                    if (!_this4.queue[message.id]) {\n                        // general JSON RPC 2.0 events\n                        if (message.method && message.params) {\n                            // run as microtask so that pending queue messages are resolved first\n                            return Promise.resolve().then(function() {\n                                _this4.emit(message.method, message.params);\n                            });\n                        }\n                        return;\n                    }\n                    // reject early since server's response is invalid\n                    if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error('Server response malformed. Response must include either \"result\"' + ' or \"error\", but not both.'));\n                    if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n                    if (message.error) _this4.queue[message.id].promise[1](message.error);\n                    else _this4.queue[message.id].promise[0](message.result);\n                    delete _this4.queue[message.id];\n                });\n                this.socket.addEventListener(\"error\", function(error) {\n                    return _this4.emit(\"error\", error);\n                });\n                this.socket.addEventListener(\"close\", function(_ref2) {\n                    var code = _ref2.code, reason = _ref2.reason;\n                    if (_this4.ready) // Delay close event until internal state is updated\n                    setTimeout(function() {\n                        return _this4.emit(\"close\", code, reason);\n                    }, 0);\n                    _this4.ready = false;\n                    _this4.socket = undefined;\n                    if (code === 1000) return;\n                    _this4.current_reconnects++;\n                    if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) _this4.reconnect_timer_id = setTimeout(function() {\n                        return _this4._connect(address, options);\n                    }, _this4.reconnect_interval);\n                });\n            }\n        }\n    ]);\n    return CommonClient;\n}(_eventemitter.EventEmitter);\nexports[\"default\"] = CommonClient;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/rpc-websockets/dist/lib/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/rpc-websockets/dist/lib/client/websocket.js":
/*!******************************************************************!*\
  !*** ./node_modules/rpc-websockets/dist/lib/client/websocket.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/* A wrapper for the \"qaap/uws-bindings\" library. */ \nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = _default;\nvar _ws = _interopRequireDefault(__webpack_require__(/*! ws */ \"(ssr)/./node_modules/ws/index.js\"));\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */ function _default(address, options) {\n    return new _ws[\"default\"](address, options);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcnBjLXdlYnNvY2tldHMvZGlzdC9saWIvY2xpZW50L3dlYnNvY2tldC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxrREFBa0QsR0FDckM7QUFFYixJQUFJQSx5QkFBeUJDLG1CQUFPQSxDQUFDLDBIQUE4QztBQUNuRkMsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFrQixHQUFHRTtBQUNyQixJQUFJQyxNQUFNUCx1QkFBdUJDLG1CQUFPQSxDQUFDLDRDQUFJO0FBQzdDOzs7Ozs7Q0FNQyxHQUNELFNBQVNLLFNBQVNFLE9BQU8sRUFBRUMsT0FBTztJQUNoQyxPQUFPLElBQUlGLEdBQUcsQ0FBQyxVQUFVLENBQUNDLFNBQVNDO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ja2V0aC8uL25vZGVfbW9kdWxlcy9ycGMtd2Vic29ja2V0cy9kaXN0L2xpYi9jbGllbnQvd2Vic29ja2V0LmpzPzgxMDAiXSwic291cmNlc0NvbnRlbnQiOlsiLyogQSB3cmFwcGVyIGZvciB0aGUgXCJxYWFwL3V3cy1iaW5kaW5nc1wiIGxpYnJhcnkuICovXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBfZGVmYXVsdDtcbnZhciBfd3MgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJ3c1wiKSk7XG4vKipcbiAqIGZhY3RvcnkgbWV0aG9kIGZvciBjb21tb24gV2ViU29ja2V0IGluc3RhbmNlXG4gKiBAbWV0aG9kXG4gKiBAcGFyYW0ge1N0cmluZ30gYWRkcmVzcyAtIHVybCB0byBhIHdlYnNvY2tldCBzZXJ2ZXJcbiAqIEBwYXJhbSB7KE9iamVjdCl9IG9wdGlvbnMgLSB3ZWJzb2NrZXQgb3B0aW9uc1xuICogQHJldHVybiB7VW5kZWZpbmVkfVxuICovXG5mdW5jdGlvbiBfZGVmYXVsdChhZGRyZXNzLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgX3dzW1wiZGVmYXVsdFwiXShhZGRyZXNzLCBvcHRpb25zKTtcbn0iXSwibmFtZXMiOlsiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9kZWZhdWx0IiwiX3dzIiwiYWRkcmVzcyIsIm9wdGlvbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/rpc-websockets/dist/lib/client/websocket.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/rpc-websockets/dist/lib/utils.js":
/*!*******************************************************!*\
  !*** ./node_modules/rpc-websockets/dist/lib/utils.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.DefaultDataPack = void 0;\nexports.createError = createError;\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"(ssr)/./node_modules/@babel/runtime/helpers/classCallCheck.js\"));\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \"(ssr)/./node_modules/@babel/runtime/helpers/createClass.js\"));\nvar errors = new Map([\n    [\n        -32000,\n        \"Event not provided\"\n    ],\n    [\n        -32600,\n        \"Invalid Request\"\n    ],\n    [\n        -32601,\n        \"Method not found\"\n    ],\n    [\n        -32602,\n        \"Invalid params\"\n    ],\n    [\n        -32603,\n        \"Internal error\"\n    ],\n    [\n        -32604,\n        \"Params not found\"\n    ],\n    [\n        -32605,\n        \"Method forbidden\"\n    ],\n    [\n        -32606,\n        \"Event forbidden\"\n    ],\n    [\n        -32700,\n        \"Parse error\"\n    ]\n]);\nvar DefaultDataPack = /*#__PURE__*/ function() {\n    function DefaultDataPack() {\n        (0, _classCallCheck2[\"default\"])(this, DefaultDataPack);\n    }\n    (0, _createClass2[\"default\"])(DefaultDataPack, [\n        {\n            key: \"encode\",\n            value: function encode(value) {\n                return JSON.stringify(value);\n            }\n        },\n        {\n            key: \"decode\",\n            value: function decode(value) {\n                return JSON.parse(value);\n            }\n        }\n    ]);\n    return DefaultDataPack;\n}();\n/**\n * Creates a JSON-RPC 2.0-compliant error.\n * @param {Number} code - error code\n * @param {String} details - error details\n * @return {Object}\n */ exports.DefaultDataPack = DefaultDataPack;\nfunction createError(code, details) {\n    var error = {\n        code: code,\n        message: errors.get(code) || \"Internal Server Error\"\n    };\n    if (details) error[\"data\"] = details;\n    return error;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcnBjLXdlYnNvY2tldHMvZGlzdC9saWIvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYixJQUFJQSx5QkFBeUJDLG1CQUFPQSxDQUFDLDBIQUE4QztBQUNuRkMsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELHVCQUF1QixHQUFHLEtBQUs7QUFDL0JBLG1CQUFtQixHQUFHRztBQUN0QixJQUFJQyxtQkFBbUJSLHVCQUF1QkMsbUJBQU9BLENBQUMsNEdBQXVDO0FBQzdGLElBQUlRLGdCQUFnQlQsdUJBQXVCQyxtQkFBT0EsQ0FBQyxzR0FBb0M7QUFDdkYsSUFBSVMsU0FBUyxJQUFJQyxJQUFJO0lBQUM7UUFBQyxDQUFDO1FBQU87S0FBcUI7SUFBRTtRQUFDLENBQUM7UUFBTztLQUFrQjtJQUFFO1FBQUMsQ0FBQztRQUFPO0tBQW1CO0lBQUU7UUFBQyxDQUFDO1FBQU87S0FBaUI7SUFBRTtRQUFDLENBQUM7UUFBTztLQUFpQjtJQUFFO1FBQUMsQ0FBQztRQUFPO0tBQW1CO0lBQUU7UUFBQyxDQUFDO1FBQU87S0FBbUI7SUFBRTtRQUFDLENBQUM7UUFBTztLQUFrQjtJQUFFO1FBQUMsQ0FBQztRQUFPO0tBQWM7Q0FBQztBQUMxUixJQUFJTCxrQkFBa0IsV0FBVyxHQUFFO0lBQ2pDLFNBQVNBO1FBQ04sSUFBR0UsZ0JBQWdCLENBQUMsVUFBVSxFQUFFLElBQUksRUFBRUY7SUFDekM7SUFDQyxJQUFHRyxhQUFhLENBQUMsVUFBVSxFQUFFSCxpQkFBaUI7UUFBQztZQUM5Q00sS0FBSztZQUNMUCxPQUFPLFNBQVNRLE9BQU9SLEtBQUs7Z0JBQzFCLE9BQU9TLEtBQUtDLFNBQVMsQ0FBQ1Y7WUFDeEI7UUFDRjtRQUFHO1lBQ0RPLEtBQUs7WUFDTFAsT0FBTyxTQUFTVyxPQUFPWCxLQUFLO2dCQUMxQixPQUFPUyxLQUFLRyxLQUFLLENBQUNaO1lBQ3BCO1FBQ0Y7S0FBRTtJQUNGLE9BQU9DO0FBQ1Q7QUFDQTs7Ozs7Q0FLQyxHQUNERix1QkFBdUIsR0FBR0U7QUFDMUIsU0FBU0MsWUFBWVcsSUFBSSxFQUFFQyxPQUFPO0lBQ2hDLElBQUlDLFFBQVE7UUFDVkYsTUFBTUE7UUFDTkcsU0FBU1gsT0FBT1ksR0FBRyxDQUFDSixTQUFTO0lBQy9CO0lBQ0EsSUFBSUMsU0FBU0MsS0FBSyxDQUFDLE9BQU8sR0FBR0Q7SUFDN0IsT0FBT0M7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL3BvY2tldGgvLi9ub2RlX21vZHVsZXMvcnBjLXdlYnNvY2tldHMvZGlzdC9saWIvdXRpbHMuanM/OGI5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5EZWZhdWx0RGF0YVBhY2sgPSB2b2lkIDA7XG5leHBvcnRzLmNyZWF0ZUVycm9yID0gY3JlYXRlRXJyb3I7XG52YXIgX2NsYXNzQ2FsbENoZWNrMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2tcIikpO1xudmFyIF9jcmVhdGVDbGFzczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzXCIpKTtcbnZhciBlcnJvcnMgPSBuZXcgTWFwKFtbLTMyMDAwLCBcIkV2ZW50IG5vdCBwcm92aWRlZFwiXSwgWy0zMjYwMCwgXCJJbnZhbGlkIFJlcXVlc3RcIl0sIFstMzI2MDEsIFwiTWV0aG9kIG5vdCBmb3VuZFwiXSwgWy0zMjYwMiwgXCJJbnZhbGlkIHBhcmFtc1wiXSwgWy0zMjYwMywgXCJJbnRlcm5hbCBlcnJvclwiXSwgWy0zMjYwNCwgXCJQYXJhbXMgbm90IGZvdW5kXCJdLCBbLTMyNjA1LCBcIk1ldGhvZCBmb3JiaWRkZW5cIl0sIFstMzI2MDYsIFwiRXZlbnQgZm9yYmlkZGVuXCJdLCBbLTMyNzAwLCBcIlBhcnNlIGVycm9yXCJdXSk7XG52YXIgRGVmYXVsdERhdGFQYWNrID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gRGVmYXVsdERhdGFQYWNrKCkge1xuICAgICgwLCBfY2xhc3NDYWxsQ2hlY2syW1wiZGVmYXVsdFwiXSkodGhpcywgRGVmYXVsdERhdGFQYWNrKTtcbiAgfVxuICAoMCwgX2NyZWF0ZUNsYXNzMltcImRlZmF1bHRcIl0pKERlZmF1bHREYXRhUGFjaywgW3tcbiAgICBrZXk6IFwiZW5jb2RlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGVuY29kZSh2YWx1ZSkge1xuICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbHVlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZGVjb2RlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRlY29kZSh2YWx1ZSkge1xuICAgICAgcmV0dXJuIEpTT04ucGFyc2UodmFsdWUpO1xuICAgIH1cbiAgfV0pO1xuICByZXR1cm4gRGVmYXVsdERhdGFQYWNrO1xufSgpO1xuLyoqXG4gKiBDcmVhdGVzIGEgSlNPTi1SUEMgMi4wLWNvbXBsaWFudCBlcnJvci5cbiAqIEBwYXJhbSB7TnVtYmVyfSBjb2RlIC0gZXJyb3IgY29kZVxuICogQHBhcmFtIHtTdHJpbmd9IGRldGFpbHMgLSBlcnJvciBkZXRhaWxzXG4gKiBAcmV0dXJuIHtPYmplY3R9XG4gKi9cbmV4cG9ydHMuRGVmYXVsdERhdGFQYWNrID0gRGVmYXVsdERhdGFQYWNrO1xuZnVuY3Rpb24gY3JlYXRlRXJyb3IoY29kZSwgZGV0YWlscykge1xuICB2YXIgZXJyb3IgPSB7XG4gICAgY29kZTogY29kZSxcbiAgICBtZXNzYWdlOiBlcnJvcnMuZ2V0KGNvZGUpIHx8IFwiSW50ZXJuYWwgU2VydmVyIEVycm9yXCJcbiAgfTtcbiAgaWYgKGRldGFpbHMpIGVycm9yW1wiZGF0YVwiXSA9IGRldGFpbHM7XG4gIHJldHVybiBlcnJvcjtcbn0iXSwibmFtZXMiOlsiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkRlZmF1bHREYXRhUGFjayIsImNyZWF0ZUVycm9yIiwiX2NsYXNzQ2FsbENoZWNrMiIsIl9jcmVhdGVDbGFzczIiLCJlcnJvcnMiLCJNYXAiLCJrZXkiLCJlbmNvZGUiLCJKU09OIiwic3RyaW5naWZ5IiwiZGVjb2RlIiwicGFyc2UiLCJjb2RlIiwiZGV0YWlscyIsImVycm9yIiwibWVzc2FnZSIsImdldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/rpc-websockets/dist/lib/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/rpc-websockets/node_modules/eventemitter3/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/rpc-websockets/node_modules/eventemitter3/index.js ***!
  \*************************************************************************/
/***/ ((module) => {

eval("\nvar has = Object.prototype.hasOwnProperty, prefix = \"~\";\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */ function Events() {}\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n    Events.prototype = Object.create(null);\n    //\n    // This hack is needed because the `__proto__` property is still inherited in\n    // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n    //\n    if (!new Events().__proto__) prefix = false;\n}\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */ function EE(fn, context, once) {\n    this.fn = fn;\n    this.context = context;\n    this.once = once || false;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */ function addListener(emitter, event, fn, context, once) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"The listener must be a function\");\n    }\n    var listener = new EE(fn, context || emitter, once), evt = prefix ? prefix + event : event;\n    if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n    else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n    else emitter._events[evt] = [\n        emitter._events[evt],\n        listener\n    ];\n    return emitter;\n}\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */ function clearEvent(emitter, evt) {\n    if (--emitter._eventsCount === 0) emitter._events = new Events();\n    else delete emitter._events[evt];\n}\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */ function EventEmitter() {\n    this._events = new Events();\n    this._eventsCount = 0;\n}\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */ EventEmitter.prototype.eventNames = function eventNames() {\n    var names = [], events, name;\n    if (this._eventsCount === 0) return names;\n    for(name in events = this._events){\n        if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n    }\n    if (Object.getOwnPropertySymbols) {\n        return names.concat(Object.getOwnPropertySymbols(events));\n    }\n    return names;\n};\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */ EventEmitter.prototype.listeners = function listeners(event) {\n    var evt = prefix ? prefix + event : event, handlers = this._events[evt];\n    if (!handlers) return [];\n    if (handlers.fn) return [\n        handlers.fn\n    ];\n    for(var i = 0, l = handlers.length, ee = new Array(l); i < l; i++){\n        ee[i] = handlers[i].fn;\n    }\n    return ee;\n};\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */ EventEmitter.prototype.listenerCount = function listenerCount(event) {\n    var evt = prefix ? prefix + event : event, listeners = this._events[evt];\n    if (!listeners) return 0;\n    if (listeners.fn) return 1;\n    return listeners.length;\n};\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */ EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n    var evt = prefix ? prefix + event : event;\n    if (!this._events[evt]) return false;\n    var listeners = this._events[evt], len = arguments.length, args, i;\n    if (listeners.fn) {\n        if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n        switch(len){\n            case 1:\n                return listeners.fn.call(listeners.context), true;\n            case 2:\n                return listeners.fn.call(listeners.context, a1), true;\n            case 3:\n                return listeners.fn.call(listeners.context, a1, a2), true;\n            case 4:\n                return listeners.fn.call(listeners.context, a1, a2, a3), true;\n            case 5:\n                return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n            case 6:\n                return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n        }\n        for(i = 1, args = new Array(len - 1); i < len; i++){\n            args[i - 1] = arguments[i];\n        }\n        listeners.fn.apply(listeners.context, args);\n    } else {\n        var length = listeners.length, j;\n        for(i = 0; i < length; i++){\n            if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n            switch(len){\n                case 1:\n                    listeners[i].fn.call(listeners[i].context);\n                    break;\n                case 2:\n                    listeners[i].fn.call(listeners[i].context, a1);\n                    break;\n                case 3:\n                    listeners[i].fn.call(listeners[i].context, a1, a2);\n                    break;\n                case 4:\n                    listeners[i].fn.call(listeners[i].context, a1, a2, a3);\n                    break;\n                default:\n                    if (!args) for(j = 1, args = new Array(len - 1); j < len; j++){\n                        args[j - 1] = arguments[j];\n                    }\n                    listeners[i].fn.apply(listeners[i].context, args);\n            }\n        }\n    }\n    return true;\n};\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */ EventEmitter.prototype.on = function on(event, fn, context) {\n    return addListener(this, event, fn, context, false);\n};\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */ EventEmitter.prototype.once = function once(event, fn, context) {\n    return addListener(this, event, fn, context, true);\n};\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */ EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n    var evt = prefix ? prefix + event : event;\n    if (!this._events[evt]) return this;\n    if (!fn) {\n        clearEvent(this, evt);\n        return this;\n    }\n    var listeners = this._events[evt];\n    if (listeners.fn) {\n        if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {\n            clearEvent(this, evt);\n        }\n    } else {\n        for(var i = 0, events = [], length = listeners.length; i < length; i++){\n            if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {\n                events.push(listeners[i]);\n            }\n        }\n        //\n        // Reset the array, or remove it completely if we have no more listeners.\n        //\n        if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n        else clearEvent(this, evt);\n    }\n    return this;\n};\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */ EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n    var evt;\n    if (event) {\n        evt = prefix ? prefix + event : event;\n        if (this._events[evt]) clearEvent(this, evt);\n    } else {\n        this._events = new Events();\n        this._eventsCount = 0;\n    }\n    return this;\n};\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n//\n// Expose the module.\n//\nif (true) {\n    module.exports = EventEmitter;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/rpc-websockets/node_modules/eventemitter3/index.js\n");

/***/ })

};
;