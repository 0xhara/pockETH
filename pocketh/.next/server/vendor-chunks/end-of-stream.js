/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/end-of-stream";
exports.ids = ["vendor-chunks/end-of-stream"];
exports.modules = {

/***/ "(ssr)/./node_modules/end-of-stream/index.js":
/*!*********************************************!*\
  !*** ./node_modules/end-of-stream/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var once = __webpack_require__(/*! once */ \"(ssr)/./node_modules/once/once.js\");\nvar noop = function() {};\nvar isRequest = function(stream) {\n    return stream.setHeader && typeof stream.abort === \"function\";\n};\nvar isChildProcess = function(stream) {\n    return stream.stdio && Array.isArray(stream.stdio) && stream.stdio.length === 3;\n};\nvar eos = function(stream, opts, callback) {\n    if (typeof opts === \"function\") return eos(stream, null, opts);\n    if (!opts) opts = {};\n    callback = once(callback || noop);\n    var ws = stream._writableState;\n    var rs = stream._readableState;\n    var readable = opts.readable || opts.readable !== false && stream.readable;\n    var writable = opts.writable || opts.writable !== false && stream.writable;\n    var cancelled = false;\n    var onlegacyfinish = function() {\n        if (!stream.writable) onfinish();\n    };\n    var onfinish = function() {\n        writable = false;\n        if (!readable) callback.call(stream);\n    };\n    var onend = function() {\n        readable = false;\n        if (!writable) callback.call(stream);\n    };\n    var onexit = function(exitCode) {\n        callback.call(stream, exitCode ? new Error(\"exited with error code: \" + exitCode) : null);\n    };\n    var onerror = function(err) {\n        callback.call(stream, err);\n    };\n    var onclose = function() {\n        process.nextTick(onclosenexttick);\n    };\n    var onclosenexttick = function() {\n        if (cancelled) return;\n        if (readable && !(rs && rs.ended && !rs.destroyed)) return callback.call(stream, new Error(\"premature close\"));\n        if (writable && !(ws && ws.ended && !ws.destroyed)) return callback.call(stream, new Error(\"premature close\"));\n    };\n    var onrequest = function() {\n        stream.req.on(\"finish\", onfinish);\n    };\n    if (isRequest(stream)) {\n        stream.on(\"complete\", onfinish);\n        stream.on(\"abort\", onclose);\n        if (stream.req) onrequest();\n        else stream.on(\"request\", onrequest);\n    } else if (writable && !ws) {\n        stream.on(\"end\", onlegacyfinish);\n        stream.on(\"close\", onlegacyfinish);\n    }\n    if (isChildProcess(stream)) stream.on(\"exit\", onexit);\n    stream.on(\"end\", onend);\n    stream.on(\"finish\", onfinish);\n    if (opts.error !== false) stream.on(\"error\", onerror);\n    stream.on(\"close\", onclose);\n    return function() {\n        cancelled = true;\n        stream.removeListener(\"complete\", onfinish);\n        stream.removeListener(\"abort\", onclose);\n        stream.removeListener(\"request\", onrequest);\n        if (stream.req) stream.req.removeListener(\"finish\", onfinish);\n        stream.removeListener(\"end\", onlegacyfinish);\n        stream.removeListener(\"close\", onlegacyfinish);\n        stream.removeListener(\"finish\", onfinish);\n        stream.removeListener(\"exit\", onexit);\n        stream.removeListener(\"end\", onend);\n        stream.removeListener(\"error\", onerror);\n        stream.removeListener(\"close\", onclose);\n    };\n};\nmodule.exports = eos;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZW5kLW9mLXN0cmVhbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxPQUFPQyxtQkFBT0EsQ0FBQztBQUVuQixJQUFJQyxPQUFPLFlBQVk7QUFFdkIsSUFBSUMsWUFBWSxTQUFTQyxNQUFNO0lBQzlCLE9BQU9BLE9BQU9DLFNBQVMsSUFBSSxPQUFPRCxPQUFPRSxLQUFLLEtBQUs7QUFDcEQ7QUFFQSxJQUFJQyxpQkFBaUIsU0FBU0gsTUFBTTtJQUNuQyxPQUFPQSxPQUFPSSxLQUFLLElBQUlDLE1BQU1DLE9BQU8sQ0FBQ04sT0FBT0ksS0FBSyxLQUFLSixPQUFPSSxLQUFLLENBQUNHLE1BQU0sS0FBSztBQUMvRTtBQUVBLElBQUlDLE1BQU0sU0FBU1IsTUFBTSxFQUFFUyxJQUFJLEVBQUVDLFFBQVE7SUFDeEMsSUFBSSxPQUFPRCxTQUFTLFlBQVksT0FBT0QsSUFBSVIsUUFBUSxNQUFNUztJQUN6RCxJQUFJLENBQUNBLE1BQU1BLE9BQU8sQ0FBQztJQUVuQkMsV0FBV2QsS0FBS2MsWUFBWVo7SUFFNUIsSUFBSWEsS0FBS1gsT0FBT1ksY0FBYztJQUM5QixJQUFJQyxLQUFLYixPQUFPYyxjQUFjO0lBQzlCLElBQUlDLFdBQVdOLEtBQUtNLFFBQVEsSUFBS04sS0FBS00sUUFBUSxLQUFLLFNBQVNmLE9BQU9lLFFBQVE7SUFDM0UsSUFBSUMsV0FBV1AsS0FBS08sUUFBUSxJQUFLUCxLQUFLTyxRQUFRLEtBQUssU0FBU2hCLE9BQU9nQixRQUFRO0lBQzNFLElBQUlDLFlBQVk7SUFFaEIsSUFBSUMsaUJBQWlCO1FBQ3BCLElBQUksQ0FBQ2xCLE9BQU9nQixRQUFRLEVBQUVHO0lBQ3ZCO0lBRUEsSUFBSUEsV0FBVztRQUNkSCxXQUFXO1FBQ1gsSUFBSSxDQUFDRCxVQUFVTCxTQUFTVSxJQUFJLENBQUNwQjtJQUM5QjtJQUVBLElBQUlxQixRQUFRO1FBQ1hOLFdBQVc7UUFDWCxJQUFJLENBQUNDLFVBQVVOLFNBQVNVLElBQUksQ0FBQ3BCO0lBQzlCO0lBRUEsSUFBSXNCLFNBQVMsU0FBU0MsUUFBUTtRQUM3QmIsU0FBU1UsSUFBSSxDQUFDcEIsUUFBUXVCLFdBQVcsSUFBSUMsTUFBTSw2QkFBNkJELFlBQVk7SUFDckY7SUFFQSxJQUFJRSxVQUFVLFNBQVNDLEdBQUc7UUFDekJoQixTQUFTVSxJQUFJLENBQUNwQixRQUFRMEI7SUFDdkI7SUFFQSxJQUFJQyxVQUFVO1FBQ2JDLFFBQVFDLFFBQVEsQ0FBQ0M7SUFDbEI7SUFFQSxJQUFJQSxrQkFBa0I7UUFDckIsSUFBSWIsV0FBVztRQUNmLElBQUlGLFlBQVksQ0FBRUYsQ0FBQUEsTUFBT0EsR0FBR2tCLEtBQUssSUFBSSxDQUFDbEIsR0FBR21CLFNBQVMsR0FBSSxPQUFPdEIsU0FBU1UsSUFBSSxDQUFDcEIsUUFBUSxJQUFJd0IsTUFBTTtRQUM3RixJQUFJUixZQUFZLENBQUVMLENBQUFBLE1BQU9BLEdBQUdvQixLQUFLLElBQUksQ0FBQ3BCLEdBQUdxQixTQUFTLEdBQUksT0FBT3RCLFNBQVNVLElBQUksQ0FBQ3BCLFFBQVEsSUFBSXdCLE1BQU07SUFDOUY7SUFFQSxJQUFJUyxZQUFZO1FBQ2ZqQyxPQUFPa0MsR0FBRyxDQUFDQyxFQUFFLENBQUMsVUFBVWhCO0lBQ3pCO0lBRUEsSUFBSXBCLFVBQVVDLFNBQVM7UUFDdEJBLE9BQU9tQyxFQUFFLENBQUMsWUFBWWhCO1FBQ3RCbkIsT0FBT21DLEVBQUUsQ0FBQyxTQUFTUjtRQUNuQixJQUFJM0IsT0FBT2tDLEdBQUcsRUFBRUQ7YUFDWGpDLE9BQU9tQyxFQUFFLENBQUMsV0FBV0Y7SUFDM0IsT0FBTyxJQUFJakIsWUFBWSxDQUFDTCxJQUFJO1FBQzNCWCxPQUFPbUMsRUFBRSxDQUFDLE9BQU9qQjtRQUNqQmxCLE9BQU9tQyxFQUFFLENBQUMsU0FBU2pCO0lBQ3BCO0lBRUEsSUFBSWYsZUFBZUgsU0FBU0EsT0FBT21DLEVBQUUsQ0FBQyxRQUFRYjtJQUU5Q3RCLE9BQU9tQyxFQUFFLENBQUMsT0FBT2Q7SUFDakJyQixPQUFPbUMsRUFBRSxDQUFDLFVBQVVoQjtJQUNwQixJQUFJVixLQUFLMkIsS0FBSyxLQUFLLE9BQU9wQyxPQUFPbUMsRUFBRSxDQUFDLFNBQVNWO0lBQzdDekIsT0FBT21DLEVBQUUsQ0FBQyxTQUFTUjtJQUVuQixPQUFPO1FBQ05WLFlBQVk7UUFDWmpCLE9BQU9xQyxjQUFjLENBQUMsWUFBWWxCO1FBQ2xDbkIsT0FBT3FDLGNBQWMsQ0FBQyxTQUFTVjtRQUMvQjNCLE9BQU9xQyxjQUFjLENBQUMsV0FBV0o7UUFDakMsSUFBSWpDLE9BQU9rQyxHQUFHLEVBQUVsQyxPQUFPa0MsR0FBRyxDQUFDRyxjQUFjLENBQUMsVUFBVWxCO1FBQ3BEbkIsT0FBT3FDLGNBQWMsQ0FBQyxPQUFPbkI7UUFDN0JsQixPQUFPcUMsY0FBYyxDQUFDLFNBQVNuQjtRQUMvQmxCLE9BQU9xQyxjQUFjLENBQUMsVUFBVWxCO1FBQ2hDbkIsT0FBT3FDLGNBQWMsQ0FBQyxRQUFRZjtRQUM5QnRCLE9BQU9xQyxjQUFjLENBQUMsT0FBT2hCO1FBQzdCckIsT0FBT3FDLGNBQWMsQ0FBQyxTQUFTWjtRQUMvQnpCLE9BQU9xQyxjQUFjLENBQUMsU0FBU1Y7SUFDaEM7QUFDRDtBQUVBVyxPQUFPQyxPQUFPLEdBQUcvQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvY2tldGgvLi9ub2RlX21vZHVsZXMvZW5kLW9mLXN0cmVhbS9pbmRleC5qcz9jNDBkIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBvbmNlID0gcmVxdWlyZSgnb25jZScpO1xuXG52YXIgbm9vcCA9IGZ1bmN0aW9uKCkge307XG5cbnZhciBpc1JlcXVlc3QgPSBmdW5jdGlvbihzdHJlYW0pIHtcblx0cmV0dXJuIHN0cmVhbS5zZXRIZWFkZXIgJiYgdHlwZW9mIHN0cmVhbS5hYm9ydCA9PT0gJ2Z1bmN0aW9uJztcbn07XG5cbnZhciBpc0NoaWxkUHJvY2VzcyA9IGZ1bmN0aW9uKHN0cmVhbSkge1xuXHRyZXR1cm4gc3RyZWFtLnN0ZGlvICYmIEFycmF5LmlzQXJyYXkoc3RyZWFtLnN0ZGlvKSAmJiBzdHJlYW0uc3RkaW8ubGVuZ3RoID09PSAzXG59O1xuXG52YXIgZW9zID0gZnVuY3Rpb24oc3RyZWFtLCBvcHRzLCBjYWxsYmFjaykge1xuXHRpZiAodHlwZW9mIG9wdHMgPT09ICdmdW5jdGlvbicpIHJldHVybiBlb3Moc3RyZWFtLCBudWxsLCBvcHRzKTtcblx0aWYgKCFvcHRzKSBvcHRzID0ge307XG5cblx0Y2FsbGJhY2sgPSBvbmNlKGNhbGxiYWNrIHx8IG5vb3ApO1xuXG5cdHZhciB3cyA9IHN0cmVhbS5fd3JpdGFibGVTdGF0ZTtcblx0dmFyIHJzID0gc3RyZWFtLl9yZWFkYWJsZVN0YXRlO1xuXHR2YXIgcmVhZGFibGUgPSBvcHRzLnJlYWRhYmxlIHx8IChvcHRzLnJlYWRhYmxlICE9PSBmYWxzZSAmJiBzdHJlYW0ucmVhZGFibGUpO1xuXHR2YXIgd3JpdGFibGUgPSBvcHRzLndyaXRhYmxlIHx8IChvcHRzLndyaXRhYmxlICE9PSBmYWxzZSAmJiBzdHJlYW0ud3JpdGFibGUpO1xuXHR2YXIgY2FuY2VsbGVkID0gZmFsc2U7XG5cblx0dmFyIG9ubGVnYWN5ZmluaXNoID0gZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCFzdHJlYW0ud3JpdGFibGUpIG9uZmluaXNoKCk7XG5cdH07XG5cblx0dmFyIG9uZmluaXNoID0gZnVuY3Rpb24oKSB7XG5cdFx0d3JpdGFibGUgPSBmYWxzZTtcblx0XHRpZiAoIXJlYWRhYmxlKSBjYWxsYmFjay5jYWxsKHN0cmVhbSk7XG5cdH07XG5cblx0dmFyIG9uZW5kID0gZnVuY3Rpb24oKSB7XG5cdFx0cmVhZGFibGUgPSBmYWxzZTtcblx0XHRpZiAoIXdyaXRhYmxlKSBjYWxsYmFjay5jYWxsKHN0cmVhbSk7XG5cdH07XG5cblx0dmFyIG9uZXhpdCA9IGZ1bmN0aW9uKGV4aXRDb2RlKSB7XG5cdFx0Y2FsbGJhY2suY2FsbChzdHJlYW0sIGV4aXRDb2RlID8gbmV3IEVycm9yKCdleGl0ZWQgd2l0aCBlcnJvciBjb2RlOiAnICsgZXhpdENvZGUpIDogbnVsbCk7XG5cdH07XG5cblx0dmFyIG9uZXJyb3IgPSBmdW5jdGlvbihlcnIpIHtcblx0XHRjYWxsYmFjay5jYWxsKHN0cmVhbSwgZXJyKTtcblx0fTtcblxuXHR2YXIgb25jbG9zZSA9IGZ1bmN0aW9uKCkge1xuXHRcdHByb2Nlc3MubmV4dFRpY2sob25jbG9zZW5leHR0aWNrKTtcblx0fTtcblxuXHR2YXIgb25jbG9zZW5leHR0aWNrID0gZnVuY3Rpb24oKSB7XG5cdFx0aWYgKGNhbmNlbGxlZCkgcmV0dXJuO1xuXHRcdGlmIChyZWFkYWJsZSAmJiAhKHJzICYmIChycy5lbmRlZCAmJiAhcnMuZGVzdHJveWVkKSkpIHJldHVybiBjYWxsYmFjay5jYWxsKHN0cmVhbSwgbmV3IEVycm9yKCdwcmVtYXR1cmUgY2xvc2UnKSk7XG5cdFx0aWYgKHdyaXRhYmxlICYmICEod3MgJiYgKHdzLmVuZGVkICYmICF3cy5kZXN0cm95ZWQpKSkgcmV0dXJuIGNhbGxiYWNrLmNhbGwoc3RyZWFtLCBuZXcgRXJyb3IoJ3ByZW1hdHVyZSBjbG9zZScpKTtcblx0fTtcblxuXHR2YXIgb25yZXF1ZXN0ID0gZnVuY3Rpb24oKSB7XG5cdFx0c3RyZWFtLnJlcS5vbignZmluaXNoJywgb25maW5pc2gpO1xuXHR9O1xuXG5cdGlmIChpc1JlcXVlc3Qoc3RyZWFtKSkge1xuXHRcdHN0cmVhbS5vbignY29tcGxldGUnLCBvbmZpbmlzaCk7XG5cdFx0c3RyZWFtLm9uKCdhYm9ydCcsIG9uY2xvc2UpO1xuXHRcdGlmIChzdHJlYW0ucmVxKSBvbnJlcXVlc3QoKTtcblx0XHRlbHNlIHN0cmVhbS5vbigncmVxdWVzdCcsIG9ucmVxdWVzdCk7XG5cdH0gZWxzZSBpZiAod3JpdGFibGUgJiYgIXdzKSB7IC8vIGxlZ2FjeSBzdHJlYW1zXG5cdFx0c3RyZWFtLm9uKCdlbmQnLCBvbmxlZ2FjeWZpbmlzaCk7XG5cdFx0c3RyZWFtLm9uKCdjbG9zZScsIG9ubGVnYWN5ZmluaXNoKTtcblx0fVxuXG5cdGlmIChpc0NoaWxkUHJvY2VzcyhzdHJlYW0pKSBzdHJlYW0ub24oJ2V4aXQnLCBvbmV4aXQpO1xuXG5cdHN0cmVhbS5vbignZW5kJywgb25lbmQpO1xuXHRzdHJlYW0ub24oJ2ZpbmlzaCcsIG9uZmluaXNoKTtcblx0aWYgKG9wdHMuZXJyb3IgIT09IGZhbHNlKSBzdHJlYW0ub24oJ2Vycm9yJywgb25lcnJvcik7XG5cdHN0cmVhbS5vbignY2xvc2UnLCBvbmNsb3NlKTtcblxuXHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdFx0Y2FuY2VsbGVkID0gdHJ1ZTtcblx0XHRzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ2NvbXBsZXRlJywgb25maW5pc2gpO1xuXHRcdHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignYWJvcnQnLCBvbmNsb3NlKTtcblx0XHRzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ3JlcXVlc3QnLCBvbnJlcXVlc3QpO1xuXHRcdGlmIChzdHJlYW0ucmVxKSBzdHJlYW0ucmVxLnJlbW92ZUxpc3RlbmVyKCdmaW5pc2gnLCBvbmZpbmlzaCk7XG5cdFx0c3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdlbmQnLCBvbmxlZ2FjeWZpbmlzaCk7XG5cdFx0c3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdjbG9zZScsIG9ubGVnYWN5ZmluaXNoKTtcblx0XHRzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ2ZpbmlzaCcsIG9uZmluaXNoKTtcblx0XHRzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ2V4aXQnLCBvbmV4aXQpO1xuXHRcdHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignZW5kJywgb25lbmQpO1xuXHRcdHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignZXJyb3InLCBvbmVycm9yKTtcblx0XHRzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ2Nsb3NlJywgb25jbG9zZSk7XG5cdH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVvcztcbiJdLCJuYW1lcyI6WyJvbmNlIiwicmVxdWlyZSIsIm5vb3AiLCJpc1JlcXVlc3QiLCJzdHJlYW0iLCJzZXRIZWFkZXIiLCJhYm9ydCIsImlzQ2hpbGRQcm9jZXNzIiwic3RkaW8iLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJlb3MiLCJvcHRzIiwiY2FsbGJhY2siLCJ3cyIsIl93cml0YWJsZVN0YXRlIiwicnMiLCJfcmVhZGFibGVTdGF0ZSIsInJlYWRhYmxlIiwid3JpdGFibGUiLCJjYW5jZWxsZWQiLCJvbmxlZ2FjeWZpbmlzaCIsIm9uZmluaXNoIiwiY2FsbCIsIm9uZW5kIiwib25leGl0IiwiZXhpdENvZGUiLCJFcnJvciIsIm9uZXJyb3IiLCJlcnIiLCJvbmNsb3NlIiwicHJvY2VzcyIsIm5leHRUaWNrIiwib25jbG9zZW5leHR0aWNrIiwiZW5kZWQiLCJkZXN0cm95ZWQiLCJvbnJlcXVlc3QiLCJyZXEiLCJvbiIsImVycm9yIiwicmVtb3ZlTGlzdGVuZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/end-of-stream/index.js\n");

/***/ })

};
;