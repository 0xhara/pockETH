"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@sideway";
exports.ids = ["vendor-chunks/@sideway"];
exports.modules = {

/***/ "(ssr)/./node_modules/@sideway/address/lib/domain.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sideway/address/lib/domain.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst Url = __webpack_require__(/*! url */ \"url\");\nconst Errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@sideway/address/lib/errors.js\");\nconst internals = {\n    minDomainSegments: 2,\n    nonAsciiRx: /[^\\x00-\\x7f]/,\n    domainControlRx: /[\\x00-\\x20@\\:\\/\\\\#!\\$&\\'\\(\\)\\*\\+,;=\\?]/,\n    tldSegmentRx: /^[a-zA-Z](?:[a-zA-Z0-9\\-]*[a-zA-Z0-9])?$/,\n    domainSegmentRx: /^[a-zA-Z0-9](?:[a-zA-Z0-9\\-]*[a-zA-Z0-9])?$/,\n    URL: Url.URL || URL // $lab:coverage:ignore$\n};\nexports.analyze = function(domain, options = {}) {\n    if (!domain) {\n        return Errors.code(\"DOMAIN_NON_EMPTY_STRING\");\n    }\n    if (typeof domain !== \"string\") {\n        throw new Error(\"Invalid input: domain must be a string\");\n    }\n    if (domain.length > 256) {\n        return Errors.code(\"DOMAIN_TOO_LONG\");\n    }\n    const ascii = !internals.nonAsciiRx.test(domain);\n    if (!ascii) {\n        if (options.allowUnicode === false) {\n            return Errors.code(\"DOMAIN_INVALID_UNICODE_CHARS\");\n        }\n        domain = domain.normalize(\"NFC\");\n    }\n    if (internals.domainControlRx.test(domain)) {\n        return Errors.code(\"DOMAIN_INVALID_CHARS\");\n    }\n    domain = internals.punycode(domain);\n    // https://tools.ietf.org/html/rfc1035 section 2.3.1\n    if (options.allowFullyQualified && domain[domain.length - 1] === \".\") {\n        domain = domain.slice(0, -1);\n    }\n    const minDomainSegments = options.minDomainSegments || internals.minDomainSegments;\n    const segments = domain.split(\".\");\n    if (segments.length < minDomainSegments) {\n        return Errors.code(\"DOMAIN_SEGMENTS_COUNT\");\n    }\n    if (options.maxDomainSegments) {\n        if (segments.length > options.maxDomainSegments) {\n            return Errors.code(\"DOMAIN_SEGMENTS_COUNT_MAX\");\n        }\n    }\n    const tlds = options.tlds;\n    if (tlds) {\n        const tld = segments[segments.length - 1].toLowerCase();\n        if (tlds.deny && tlds.deny.has(tld) || tlds.allow && !tlds.allow.has(tld)) {\n            return Errors.code(\"DOMAIN_FORBIDDEN_TLDS\");\n        }\n    }\n    for(let i = 0; i < segments.length; ++i){\n        const segment = segments[i];\n        if (!segment.length) {\n            return Errors.code(\"DOMAIN_EMPTY_SEGMENT\");\n        }\n        if (segment.length > 63) {\n            return Errors.code(\"DOMAIN_LONG_SEGMENT\");\n        }\n        if (i < segments.length - 1) {\n            if (!internals.domainSegmentRx.test(segment)) {\n                return Errors.code(\"DOMAIN_INVALID_CHARS\");\n            }\n        } else {\n            if (!internals.tldSegmentRx.test(segment)) {\n                return Errors.code(\"DOMAIN_INVALID_TLDS_CHARS\");\n            }\n        }\n    }\n    return null;\n};\nexports.isValid = function(domain, options) {\n    return !exports.analyze(domain, options);\n};\ninternals.punycode = function(domain) {\n    if (domain.includes(\"%\")) {\n        domain = domain.replace(/%/g, \"%25\");\n    }\n    try {\n        return new internals.URL(`http://${domain}`).host;\n    } catch (err) {\n        return domain;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sideway/address/lib/domain.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sideway/address/lib/email.js":
/*!****************************************************!*\
  !*** ./node_modules/@sideway/address/lib/email.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst Util = __webpack_require__(/*! util */ \"util\");\nconst Domain = __webpack_require__(/*! ./domain */ \"(ssr)/./node_modules/@sideway/address/lib/domain.js\");\nconst Errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@sideway/address/lib/errors.js\");\nconst internals = {\n    nonAsciiRx: /[^\\x00-\\x7f]/,\n    encoder: new (Util.TextEncoder || TextEncoder)() // $lab:coverage:ignore$\n};\nexports.analyze = function(email, options) {\n    return internals.email(email, options);\n};\nexports.isValid = function(email, options) {\n    return !internals.email(email, options);\n};\ninternals.email = function(email, options = {}) {\n    if (typeof email !== \"string\") {\n        throw new Error(\"Invalid input: email must be a string\");\n    }\n    if (!email) {\n        return Errors.code(\"EMPTY_STRING\");\n    }\n    // Unicode\n    const ascii = !internals.nonAsciiRx.test(email);\n    if (!ascii) {\n        if (options.allowUnicode === false) {\n            return Errors.code(\"FORBIDDEN_UNICODE\");\n        }\n        email = email.normalize(\"NFC\");\n    }\n    // Basic structure\n    const parts = email.split(\"@\");\n    if (parts.length !== 2) {\n        return parts.length > 2 ? Errors.code(\"MULTIPLE_AT_CHAR\") : Errors.code(\"MISSING_AT_CHAR\");\n    }\n    const [local, domain] = parts;\n    if (!local) {\n        return Errors.code(\"EMPTY_LOCAL\");\n    }\n    if (!options.ignoreLength) {\n        if (email.length > 254) {\n            return Errors.code(\"ADDRESS_TOO_LONG\");\n        }\n        if (internals.encoder.encode(local).length > 64) {\n            return Errors.code(\"LOCAL_TOO_LONG\");\n        }\n    }\n    // Validate parts\n    return internals.local(local, ascii) || Domain.analyze(domain, options);\n};\ninternals.local = function(local, ascii) {\n    const segments = local.split(\".\");\n    for (const segment of segments){\n        if (!segment.length) {\n            return Errors.code(\"EMPTY_LOCAL_SEGMENT\");\n        }\n        if (ascii) {\n            if (!internals.atextRx.test(segment)) {\n                return Errors.code(\"INVALID_LOCAL_CHARS\");\n            }\n            continue;\n        }\n        for (const char of segment){\n            if (internals.atextRx.test(char)) {\n                continue;\n            }\n            const binary = internals.binary(char);\n            if (!internals.atomRx.test(binary)) {\n                return Errors.code(\"INVALID_LOCAL_CHARS\");\n            }\n        }\n    }\n};\ninternals.binary = function(char) {\n    return Array.from(internals.encoder.encode(char)).map((v)=>String.fromCharCode(v)).join(\"\");\n};\n/*\n    From RFC 5321:\n\n        Mailbox         =   Local-part \"@\" ( Domain / address-literal )\n\n        Local-part      =   Dot-string / Quoted-string\n        Dot-string      =   Atom *(\".\"  Atom)\n        Atom            =   1*atext\n        atext           =   ALPHA / DIGIT / \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\" / \"+\" / \"-\" / \"/\" / \"=\" / \"?\" / \"^\" / \"_\" / \"`\" / \"{\" / \"|\" / \"}\" / \"~\"\n\n        Domain          =   sub-domain *(\".\" sub-domain)\n        sub-domain      =   Let-dig [Ldh-str]\n        Let-dig         =   ALPHA / DIGIT\n        Ldh-str         =   *( ALPHA / DIGIT / \"-\" ) Let-dig\n\n        ALPHA           =   %x41-5A / %x61-7A        ; a-z, A-Z\n        DIGIT           =   %x30-39                  ; 0-9\n\n    From RFC 6531:\n\n        sub-domain      =/  U-label\n        atext           =/  UTF8-non-ascii\n\n        UTF8-non-ascii  =   UTF8-2 / UTF8-3 / UTF8-4\n\n        UTF8-2          =   %xC2-DF UTF8-tail\n        UTF8-3          =   %xE0 %xA0-BF UTF8-tail /\n                            %xE1-EC 2( UTF8-tail ) /\n                            %xED %x80-9F UTF8-tail /\n                            %xEE-EF 2( UTF8-tail )\n        UTF8-4          =   %xF0 %x90-BF 2( UTF8-tail ) /\n                            %xF1-F3 3( UTF8-tail ) /\n                            %xF4 %x80-8F 2( UTF8-tail )\n\n        UTF8-tail       =   %x80-BF\n\n    Note: The following are not supported:\n\n        RFC 5321: address-literal, Quoted-string\n        RFC 5322: obs-*, CFWS\n*/ internals.atextRx = /^[\\w!#\\$%&'\\*\\+\\-/=\\?\\^`\\{\\|\\}~]+$/; // _ included in \\w\ninternals.atomRx = new RegExp([\n    //  %xC2-DF UTF8-tail\n    \"(?:[\\\\xc2-\\\\xdf][\\\\x80-\\\\xbf])\",\n    //  %xE0 %xA0-BF UTF8-tail              %xE1-EC 2( UTF8-tail )            %xED %x80-9F UTF8-tail              %xEE-EF 2( UTF8-tail )\n    \"(?:\\\\xe0[\\\\xa0-\\\\xbf][\\\\x80-\\\\xbf])|(?:[\\\\xe1-\\\\xec][\\\\x80-\\\\xbf]{2})|(?:\\\\xed[\\\\x80-\\\\x9f][\\\\x80-\\\\xbf])|(?:[\\\\xee-\\\\xef][\\\\x80-\\\\xbf]{2})\",\n    //  %xF0 %x90-BF 2( UTF8-tail )            %xF1-F3 3( UTF8-tail )            %xF4 %x80-8F 2( UTF8-tail )\n    \"(?:\\\\xf0[\\\\x90-\\\\xbf][\\\\x80-\\\\xbf]{2})|(?:[\\\\xf1-\\\\xf3][\\\\x80-\\\\xbf]{3})|(?:\\\\xf4[\\\\x80-\\\\x8f][\\\\x80-\\\\xbf]{2})\"\n].join(\"|\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sideway/address/lib/email.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sideway/address/lib/errors.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sideway/address/lib/errors.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.codes = {\n    EMPTY_STRING: \"Address must be a non-empty string\",\n    FORBIDDEN_UNICODE: \"Address contains forbidden Unicode characters\",\n    MULTIPLE_AT_CHAR: \"Address cannot contain more than one @ character\",\n    MISSING_AT_CHAR: \"Address must contain one @ character\",\n    EMPTY_LOCAL: \"Address local part cannot be empty\",\n    ADDRESS_TOO_LONG: \"Address too long\",\n    LOCAL_TOO_LONG: \"Address local part too long\",\n    EMPTY_LOCAL_SEGMENT: \"Address local part contains empty dot-separated segment\",\n    INVALID_LOCAL_CHARS: \"Address local part contains invalid character\",\n    DOMAIN_NON_EMPTY_STRING: \"Domain must be a non-empty string\",\n    DOMAIN_TOO_LONG: \"Domain too long\",\n    DOMAIN_INVALID_UNICODE_CHARS: \"Domain contains forbidden Unicode characters\",\n    DOMAIN_INVALID_CHARS: \"Domain contains invalid character\",\n    DOMAIN_INVALID_TLDS_CHARS: \"Domain contains invalid tld character\",\n    DOMAIN_SEGMENTS_COUNT: \"Domain lacks the minimum required number of segments\",\n    DOMAIN_SEGMENTS_COUNT_MAX: \"Domain contains too many segments\",\n    DOMAIN_FORBIDDEN_TLDS: \"Domain uses forbidden TLD\",\n    DOMAIN_EMPTY_SEGMENT: \"Domain contains empty dot-separated segment\",\n    DOMAIN_LONG_SEGMENT: \"Domain contains dot-separated segment that is too long\"\n};\nexports.code = function(code) {\n    return {\n        code,\n        error: exports.codes[code]\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNpZGV3YXkvYWRkcmVzcy9saWIvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLGFBQWEsR0FBRztJQUNaRSxjQUFjO0lBQ2RDLG1CQUFtQjtJQUNuQkMsa0JBQWtCO0lBQ2xCQyxpQkFBaUI7SUFDakJDLGFBQWE7SUFDYkMsa0JBQWtCO0lBQ2xCQyxnQkFBZ0I7SUFDaEJDLHFCQUFxQjtJQUNyQkMscUJBQXFCO0lBQ3JCQyx5QkFBeUI7SUFDekJDLGlCQUFpQjtJQUNqQkMsOEJBQThCO0lBQzlCQyxzQkFBc0I7SUFDdEJDLDJCQUEyQjtJQUMzQkMsdUJBQXVCO0lBQ3ZCQywyQkFBMkI7SUFDM0JDLHVCQUF1QjtJQUN2QkMsc0JBQXNCO0lBQ3RCQyxxQkFBcUI7QUFDekI7QUFHQXBCLFlBQVksR0FBRyxTQUFVcUIsSUFBSTtJQUV6QixPQUFPO1FBQUVBO1FBQU1DLE9BQU90QixRQUFRQyxLQUFLLENBQUNvQixLQUFLO0lBQUM7QUFDOUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb2NrZXRoLy4vbm9kZV9tb2R1bGVzL0BzaWRld2F5L2FkZHJlc3MvbGliL2Vycm9ycy5qcz80NDJkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5jb2RlcyA9IHtcbiAgICBFTVBUWV9TVFJJTkc6ICdBZGRyZXNzIG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nJyxcbiAgICBGT1JCSURERU5fVU5JQ09ERTogJ0FkZHJlc3MgY29udGFpbnMgZm9yYmlkZGVuIFVuaWNvZGUgY2hhcmFjdGVycycsXG4gICAgTVVMVElQTEVfQVRfQ0hBUjogJ0FkZHJlc3MgY2Fubm90IGNvbnRhaW4gbW9yZSB0aGFuIG9uZSBAIGNoYXJhY3RlcicsXG4gICAgTUlTU0lOR19BVF9DSEFSOiAnQWRkcmVzcyBtdXN0IGNvbnRhaW4gb25lIEAgY2hhcmFjdGVyJyxcbiAgICBFTVBUWV9MT0NBTDogJ0FkZHJlc3MgbG9jYWwgcGFydCBjYW5ub3QgYmUgZW1wdHknLFxuICAgIEFERFJFU1NfVE9PX0xPTkc6ICdBZGRyZXNzIHRvbyBsb25nJyxcbiAgICBMT0NBTF9UT09fTE9ORzogJ0FkZHJlc3MgbG9jYWwgcGFydCB0b28gbG9uZycsXG4gICAgRU1QVFlfTE9DQUxfU0VHTUVOVDogJ0FkZHJlc3MgbG9jYWwgcGFydCBjb250YWlucyBlbXB0eSBkb3Qtc2VwYXJhdGVkIHNlZ21lbnQnLFxuICAgIElOVkFMSURfTE9DQUxfQ0hBUlM6ICdBZGRyZXNzIGxvY2FsIHBhcnQgY29udGFpbnMgaW52YWxpZCBjaGFyYWN0ZXInLFxuICAgIERPTUFJTl9OT05fRU1QVFlfU1RSSU5HOiAnRG9tYWluIG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nJyxcbiAgICBET01BSU5fVE9PX0xPTkc6ICdEb21haW4gdG9vIGxvbmcnLFxuICAgIERPTUFJTl9JTlZBTElEX1VOSUNPREVfQ0hBUlM6ICdEb21haW4gY29udGFpbnMgZm9yYmlkZGVuIFVuaWNvZGUgY2hhcmFjdGVycycsXG4gICAgRE9NQUlOX0lOVkFMSURfQ0hBUlM6ICdEb21haW4gY29udGFpbnMgaW52YWxpZCBjaGFyYWN0ZXInLFxuICAgIERPTUFJTl9JTlZBTElEX1RMRFNfQ0hBUlM6ICdEb21haW4gY29udGFpbnMgaW52YWxpZCB0bGQgY2hhcmFjdGVyJyxcbiAgICBET01BSU5fU0VHTUVOVFNfQ09VTlQ6ICdEb21haW4gbGFja3MgdGhlIG1pbmltdW0gcmVxdWlyZWQgbnVtYmVyIG9mIHNlZ21lbnRzJyxcbiAgICBET01BSU5fU0VHTUVOVFNfQ09VTlRfTUFYOiAnRG9tYWluIGNvbnRhaW5zIHRvbyBtYW55IHNlZ21lbnRzJyxcbiAgICBET01BSU5fRk9SQklEREVOX1RMRFM6ICdEb21haW4gdXNlcyBmb3JiaWRkZW4gVExEJyxcbiAgICBET01BSU5fRU1QVFlfU0VHTUVOVDogJ0RvbWFpbiBjb250YWlucyBlbXB0eSBkb3Qtc2VwYXJhdGVkIHNlZ21lbnQnLFxuICAgIERPTUFJTl9MT05HX1NFR01FTlQ6ICdEb21haW4gY29udGFpbnMgZG90LXNlcGFyYXRlZCBzZWdtZW50IHRoYXQgaXMgdG9vIGxvbmcnXG59O1xuXG5cbmV4cG9ydHMuY29kZSA9IGZ1bmN0aW9uIChjb2RlKSB7XG5cbiAgICByZXR1cm4geyBjb2RlLCBlcnJvcjogZXhwb3J0cy5jb2Rlc1tjb2RlXSB9O1xufTtcbiJdLCJuYW1lcyI6WyJleHBvcnRzIiwiY29kZXMiLCJFTVBUWV9TVFJJTkciLCJGT1JCSURERU5fVU5JQ09ERSIsIk1VTFRJUExFX0FUX0NIQVIiLCJNSVNTSU5HX0FUX0NIQVIiLCJFTVBUWV9MT0NBTCIsIkFERFJFU1NfVE9PX0xPTkciLCJMT0NBTF9UT09fTE9ORyIsIkVNUFRZX0xPQ0FMX1NFR01FTlQiLCJJTlZBTElEX0xPQ0FMX0NIQVJTIiwiRE9NQUlOX05PTl9FTVBUWV9TVFJJTkciLCJET01BSU5fVE9PX0xPTkciLCJET01BSU5fSU5WQUxJRF9VTklDT0RFX0NIQVJTIiwiRE9NQUlOX0lOVkFMSURfQ0hBUlMiLCJET01BSU5fSU5WQUxJRF9UTERTX0NIQVJTIiwiRE9NQUlOX1NFR01FTlRTX0NPVU5UIiwiRE9NQUlOX1NFR01FTlRTX0NPVU5UX01BWCIsIkRPTUFJTl9GT1JCSURERU5fVExEUyIsIkRPTUFJTl9FTVBUWV9TRUdNRU5UIiwiRE9NQUlOX0xPTkdfU0VHTUVOVCIsImNvZGUiLCJlcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sideway/address/lib/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sideway/address/lib/ip.js":
/*!*************************************************!*\
  !*** ./node_modules/@sideway/address/lib/ip.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst Assert = __webpack_require__(/*! @hapi/hoek/lib/assert */ \"(ssr)/./node_modules/@hapi/hoek/lib/assert.js\");\nconst Uri = __webpack_require__(/*! ./uri */ \"(ssr)/./node_modules/@sideway/address/lib/uri.js\");\nconst internals = {};\nexports.regex = function(options = {}) {\n    // CIDR\n    Assert(options.cidr === undefined || typeof options.cidr === \"string\", \"options.cidr must be a string\");\n    const cidr = options.cidr ? options.cidr.toLowerCase() : \"optional\";\n    Assert([\n        \"required\",\n        \"optional\",\n        \"forbidden\"\n    ].includes(cidr), \"options.cidr must be one of required, optional, forbidden\");\n    // Versions\n    Assert(options.version === undefined || typeof options.version === \"string\" || Array.isArray(options.version), \"options.version must be a string or an array of string\");\n    let versions = options.version || [\n        \"ipv4\",\n        \"ipv6\",\n        \"ipvfuture\"\n    ];\n    if (!Array.isArray(versions)) {\n        versions = [\n            versions\n        ];\n    }\n    Assert(versions.length >= 1, \"options.version must have at least 1 version specified\");\n    for(let i = 0; i < versions.length; ++i){\n        Assert(typeof versions[i] === \"string\", \"options.version must only contain strings\");\n        versions[i] = versions[i].toLowerCase();\n        Assert([\n            \"ipv4\",\n            \"ipv6\",\n            \"ipvfuture\"\n        ].includes(versions[i]), \"options.version contains unknown version \" + versions[i] + \" - must be one of ipv4, ipv6, ipvfuture\");\n    }\n    versions = Array.from(new Set(versions));\n    // Regex\n    const parts = versions.map((version)=>{\n        // Forbidden\n        if (cidr === \"forbidden\") {\n            return Uri.ip[version];\n        }\n        // Required\n        const cidrpart = `\\\\/${version === \"ipv4\" ? Uri.ip.v4Cidr : Uri.ip.v6Cidr}`;\n        if (cidr === \"required\") {\n            return `${Uri.ip[version]}${cidrpart}`;\n        }\n        // Optional\n        return `${Uri.ip[version]}(?:${cidrpart})?`;\n    });\n    const raw = `(?:${parts.join(\"|\")})`;\n    const regex = new RegExp(`^${raw}$`);\n    return {\n        cidr,\n        versions,\n        regex,\n        raw\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNpZGV3YXkvYWRkcmVzcy9saWIvaXAuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxTQUFTQyxtQkFBT0EsQ0FBQztBQUV2QixNQUFNQyxNQUFNRCxtQkFBT0EsQ0FBQztBQUdwQixNQUFNRSxZQUFZLENBQUM7QUFHbkJDLGFBQWEsR0FBRyxTQUFVRSxVQUFVLENBQUMsQ0FBQztJQUVsQyxPQUFPO0lBRVBOLE9BQU9NLFFBQVFDLElBQUksS0FBS0MsYUFBYSxPQUFPRixRQUFRQyxJQUFJLEtBQUssVUFBVTtJQUN2RSxNQUFNQSxPQUFPRCxRQUFRQyxJQUFJLEdBQUdELFFBQVFDLElBQUksQ0FBQ0UsV0FBVyxLQUFLO0lBQ3pEVCxPQUFPO1FBQUM7UUFBWTtRQUFZO0tBQVksQ0FBQ1UsUUFBUSxDQUFDSCxPQUFPO0lBRTdELFdBQVc7SUFFWFAsT0FBT00sUUFBUUssT0FBTyxLQUFLSCxhQUFhLE9BQU9GLFFBQVFLLE9BQU8sS0FBSyxZQUFZQyxNQUFNQyxPQUFPLENBQUNQLFFBQVFLLE9BQU8sR0FBRztJQUMvRyxJQUFJRyxXQUFXUixRQUFRSyxPQUFPLElBQUk7UUFBQztRQUFRO1FBQVE7S0FBWTtJQUMvRCxJQUFJLENBQUNDLE1BQU1DLE9BQU8sQ0FBQ0MsV0FBVztRQUMxQkEsV0FBVztZQUFDQTtTQUFTO0lBQ3pCO0lBRUFkLE9BQU9jLFNBQVNDLE1BQU0sSUFBSSxHQUFHO0lBRTdCLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJRixTQUFTQyxNQUFNLEVBQUUsRUFBRUMsRUFBRztRQUN0Q2hCLE9BQU8sT0FBT2MsUUFBUSxDQUFDRSxFQUFFLEtBQUssVUFBVTtRQUN4Q0YsUUFBUSxDQUFDRSxFQUFFLEdBQUdGLFFBQVEsQ0FBQ0UsRUFBRSxDQUFDUCxXQUFXO1FBQ3JDVCxPQUFPO1lBQUM7WUFBUTtZQUFRO1NBQVksQ0FBQ1UsUUFBUSxDQUFDSSxRQUFRLENBQUNFLEVBQUUsR0FBRyw4Q0FBOENGLFFBQVEsQ0FBQ0UsRUFBRSxHQUFHO0lBQzVIO0lBRUFGLFdBQVdGLE1BQU1LLElBQUksQ0FBQyxJQUFJQyxJQUFJSjtJQUU5QixRQUFRO0lBRVIsTUFBTUssUUFBUUwsU0FBU00sR0FBRyxDQUFDLENBQUNUO1FBRXhCLFlBQVk7UUFFWixJQUFJSixTQUFTLGFBQWE7WUFDdEIsT0FBT0wsSUFBSW1CLEVBQUUsQ0FBQ1YsUUFBUTtRQUMxQjtRQUVBLFdBQVc7UUFFWCxNQUFNVyxXQUFXLENBQUMsR0FBRyxFQUFFWCxZQUFZLFNBQVNULElBQUltQixFQUFFLENBQUNFLE1BQU0sR0FBR3JCLElBQUltQixFQUFFLENBQUNHLE1BQU0sQ0FBQyxDQUFDO1FBRTNFLElBQUlqQixTQUFTLFlBQVk7WUFDckIsT0FBTyxDQUFDLEVBQUVMLElBQUltQixFQUFFLENBQUNWLFFBQVEsQ0FBQyxFQUFFVyxTQUFTLENBQUM7UUFDMUM7UUFFQSxXQUFXO1FBRVgsT0FBTyxDQUFDLEVBQUVwQixJQUFJbUIsRUFBRSxDQUFDVixRQUFRLENBQUMsR0FBRyxFQUFFVyxTQUFTLEVBQUUsQ0FBQztJQUMvQztJQUVBLE1BQU1HLE1BQU0sQ0FBQyxHQUFHLEVBQUVOLE1BQU1PLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNwQyxNQUFNckIsUUFBUSxJQUFJc0IsT0FBTyxDQUFDLENBQUMsRUFBRUYsSUFBSSxDQUFDLENBQUM7SUFDbkMsT0FBTztRQUFFbEI7UUFBTU87UUFBVVQ7UUFBT29CO0lBQUk7QUFDeEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb2NrZXRoLy4vbm9kZV9tb2R1bGVzL0BzaWRld2F5L2FkZHJlc3MvbGliL2lwLmpzPzM3Y2UiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBBc3NlcnQgPSByZXF1aXJlKCdAaGFwaS9ob2VrL2xpYi9hc3NlcnQnKTtcblxuY29uc3QgVXJpID0gcmVxdWlyZSgnLi91cmknKTtcblxuXG5jb25zdCBpbnRlcm5hbHMgPSB7fTtcblxuXG5leHBvcnRzLnJlZ2V4ID0gZnVuY3Rpb24gKG9wdGlvbnMgPSB7fSkge1xuXG4gICAgLy8gQ0lEUlxuXG4gICAgQXNzZXJ0KG9wdGlvbnMuY2lkciA9PT0gdW5kZWZpbmVkIHx8IHR5cGVvZiBvcHRpb25zLmNpZHIgPT09ICdzdHJpbmcnLCAnb3B0aW9ucy5jaWRyIG11c3QgYmUgYSBzdHJpbmcnKTtcbiAgICBjb25zdCBjaWRyID0gb3B0aW9ucy5jaWRyID8gb3B0aW9ucy5jaWRyLnRvTG93ZXJDYXNlKCkgOiAnb3B0aW9uYWwnO1xuICAgIEFzc2VydChbJ3JlcXVpcmVkJywgJ29wdGlvbmFsJywgJ2ZvcmJpZGRlbiddLmluY2x1ZGVzKGNpZHIpLCAnb3B0aW9ucy5jaWRyIG11c3QgYmUgb25lIG9mIHJlcXVpcmVkLCBvcHRpb25hbCwgZm9yYmlkZGVuJyk7XG5cbiAgICAvLyBWZXJzaW9uc1xuXG4gICAgQXNzZXJ0KG9wdGlvbnMudmVyc2lvbiA9PT0gdW5kZWZpbmVkIHx8IHR5cGVvZiBvcHRpb25zLnZlcnNpb24gPT09ICdzdHJpbmcnIHx8IEFycmF5LmlzQXJyYXkob3B0aW9ucy52ZXJzaW9uKSwgJ29wdGlvbnMudmVyc2lvbiBtdXN0IGJlIGEgc3RyaW5nIG9yIGFuIGFycmF5IG9mIHN0cmluZycpO1xuICAgIGxldCB2ZXJzaW9ucyA9IG9wdGlvbnMudmVyc2lvbiB8fCBbJ2lwdjQnLCAnaXB2NicsICdpcHZmdXR1cmUnXTtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodmVyc2lvbnMpKSB7XG4gICAgICAgIHZlcnNpb25zID0gW3ZlcnNpb25zXTtcbiAgICB9XG5cbiAgICBBc3NlcnQodmVyc2lvbnMubGVuZ3RoID49IDEsICdvcHRpb25zLnZlcnNpb24gbXVzdCBoYXZlIGF0IGxlYXN0IDEgdmVyc2lvbiBzcGVjaWZpZWQnKTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdmVyc2lvbnMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgQXNzZXJ0KHR5cGVvZiB2ZXJzaW9uc1tpXSA9PT0gJ3N0cmluZycsICdvcHRpb25zLnZlcnNpb24gbXVzdCBvbmx5IGNvbnRhaW4gc3RyaW5ncycpO1xuICAgICAgICB2ZXJzaW9uc1tpXSA9IHZlcnNpb25zW2ldLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIEFzc2VydChbJ2lwdjQnLCAnaXB2NicsICdpcHZmdXR1cmUnXS5pbmNsdWRlcyh2ZXJzaW9uc1tpXSksICdvcHRpb25zLnZlcnNpb24gY29udGFpbnMgdW5rbm93biB2ZXJzaW9uICcgKyB2ZXJzaW9uc1tpXSArICcgLSBtdXN0IGJlIG9uZSBvZiBpcHY0LCBpcHY2LCBpcHZmdXR1cmUnKTtcbiAgICB9XG5cbiAgICB2ZXJzaW9ucyA9IEFycmF5LmZyb20obmV3IFNldCh2ZXJzaW9ucykpO1xuXG4gICAgLy8gUmVnZXhcblxuICAgIGNvbnN0IHBhcnRzID0gdmVyc2lvbnMubWFwKCh2ZXJzaW9uKSA9PiB7XG5cbiAgICAgICAgLy8gRm9yYmlkZGVuXG5cbiAgICAgICAgaWYgKGNpZHIgPT09ICdmb3JiaWRkZW4nKSB7XG4gICAgICAgICAgICByZXR1cm4gVXJpLmlwW3ZlcnNpb25dO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gUmVxdWlyZWRcblxuICAgICAgICBjb25zdCBjaWRycGFydCA9IGBcXFxcLyR7dmVyc2lvbiA9PT0gJ2lwdjQnID8gVXJpLmlwLnY0Q2lkciA6IFVyaS5pcC52NkNpZHJ9YDtcblxuICAgICAgICBpZiAoY2lkciA9PT0gJ3JlcXVpcmVkJykge1xuICAgICAgICAgICAgcmV0dXJuIGAke1VyaS5pcFt2ZXJzaW9uXX0ke2NpZHJwYXJ0fWA7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBPcHRpb25hbFxuXG4gICAgICAgIHJldHVybiBgJHtVcmkuaXBbdmVyc2lvbl19KD86JHtjaWRycGFydH0pP2A7XG4gICAgfSk7XG5cbiAgICBjb25zdCByYXcgPSBgKD86JHtwYXJ0cy5qb2luKCd8Jyl9KWA7XG4gICAgY29uc3QgcmVnZXggPSBuZXcgUmVnRXhwKGBeJHtyYXd9JGApO1xuICAgIHJldHVybiB7IGNpZHIsIHZlcnNpb25zLCByZWdleCwgcmF3IH07XG59O1xuIl0sIm5hbWVzIjpbIkFzc2VydCIsInJlcXVpcmUiLCJVcmkiLCJpbnRlcm5hbHMiLCJleHBvcnRzIiwicmVnZXgiLCJvcHRpb25zIiwiY2lkciIsInVuZGVmaW5lZCIsInRvTG93ZXJDYXNlIiwiaW5jbHVkZXMiLCJ2ZXJzaW9uIiwiQXJyYXkiLCJpc0FycmF5IiwidmVyc2lvbnMiLCJsZW5ndGgiLCJpIiwiZnJvbSIsIlNldCIsInBhcnRzIiwibWFwIiwiaXAiLCJjaWRycGFydCIsInY0Q2lkciIsInY2Q2lkciIsInJhdyIsImpvaW4iLCJSZWdFeHAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sideway/address/lib/ip.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sideway/address/lib/tlds.js":
/*!***************************************************!*\
  !*** ./node_modules/@sideway/address/lib/tlds.js ***!
  \***************************************************/
/***/ ((module) => {

eval("\nconst internals = {};\n// http://data.iana.org/TLD/tlds-alpha-by-domain.txt\n// # Version 2022032102, Last Updated Tue Mar 22 07:07:01 2022 UTC\ninternals.tlds = [\n    \"AAA\",\n    \"AARP\",\n    \"ABARTH\",\n    \"ABB\",\n    \"ABBOTT\",\n    \"ABBVIE\",\n    \"ABC\",\n    \"ABLE\",\n    \"ABOGADO\",\n    \"ABUDHABI\",\n    \"AC\",\n    \"ACADEMY\",\n    \"ACCENTURE\",\n    \"ACCOUNTANT\",\n    \"ACCOUNTANTS\",\n    \"ACO\",\n    \"ACTOR\",\n    \"AD\",\n    \"ADAC\",\n    \"ADS\",\n    \"ADULT\",\n    \"AE\",\n    \"AEG\",\n    \"AERO\",\n    \"AETNA\",\n    \"AF\",\n    \"AFL\",\n    \"AFRICA\",\n    \"AG\",\n    \"AGAKHAN\",\n    \"AGENCY\",\n    \"AI\",\n    \"AIG\",\n    \"AIRBUS\",\n    \"AIRFORCE\",\n    \"AIRTEL\",\n    \"AKDN\",\n    \"AL\",\n    \"ALFAROMEO\",\n    \"ALIBABA\",\n    \"ALIPAY\",\n    \"ALLFINANZ\",\n    \"ALLSTATE\",\n    \"ALLY\",\n    \"ALSACE\",\n    \"ALSTOM\",\n    \"AM\",\n    \"AMAZON\",\n    \"AMERICANEXPRESS\",\n    \"AMERICANFAMILY\",\n    \"AMEX\",\n    \"AMFAM\",\n    \"AMICA\",\n    \"AMSTERDAM\",\n    \"ANALYTICS\",\n    \"ANDROID\",\n    \"ANQUAN\",\n    \"ANZ\",\n    \"AO\",\n    \"AOL\",\n    \"APARTMENTS\",\n    \"APP\",\n    \"APPLE\",\n    \"AQ\",\n    \"AQUARELLE\",\n    \"AR\",\n    \"ARAB\",\n    \"ARAMCO\",\n    \"ARCHI\",\n    \"ARMY\",\n    \"ARPA\",\n    \"ART\",\n    \"ARTE\",\n    \"AS\",\n    \"ASDA\",\n    \"ASIA\",\n    \"ASSOCIATES\",\n    \"AT\",\n    \"ATHLETA\",\n    \"ATTORNEY\",\n    \"AU\",\n    \"AUCTION\",\n    \"AUDI\",\n    \"AUDIBLE\",\n    \"AUDIO\",\n    \"AUSPOST\",\n    \"AUTHOR\",\n    \"AUTO\",\n    \"AUTOS\",\n    \"AVIANCA\",\n    \"AW\",\n    \"AWS\",\n    \"AX\",\n    \"AXA\",\n    \"AZ\",\n    \"AZURE\",\n    \"BA\",\n    \"BABY\",\n    \"BAIDU\",\n    \"BANAMEX\",\n    \"BANANAREPUBLIC\",\n    \"BAND\",\n    \"BANK\",\n    \"BAR\",\n    \"BARCELONA\",\n    \"BARCLAYCARD\",\n    \"BARCLAYS\",\n    \"BAREFOOT\",\n    \"BARGAINS\",\n    \"BASEBALL\",\n    \"BASKETBALL\",\n    \"BAUHAUS\",\n    \"BAYERN\",\n    \"BB\",\n    \"BBC\",\n    \"BBT\",\n    \"BBVA\",\n    \"BCG\",\n    \"BCN\",\n    \"BD\",\n    \"BE\",\n    \"BEATS\",\n    \"BEAUTY\",\n    \"BEER\",\n    \"BENTLEY\",\n    \"BERLIN\",\n    \"BEST\",\n    \"BESTBUY\",\n    \"BET\",\n    \"BF\",\n    \"BG\",\n    \"BH\",\n    \"BHARTI\",\n    \"BI\",\n    \"BIBLE\",\n    \"BID\",\n    \"BIKE\",\n    \"BING\",\n    \"BINGO\",\n    \"BIO\",\n    \"BIZ\",\n    \"BJ\",\n    \"BLACK\",\n    \"BLACKFRIDAY\",\n    \"BLOCKBUSTER\",\n    \"BLOG\",\n    \"BLOOMBERG\",\n    \"BLUE\",\n    \"BM\",\n    \"BMS\",\n    \"BMW\",\n    \"BN\",\n    \"BNPPARIBAS\",\n    \"BO\",\n    \"BOATS\",\n    \"BOEHRINGER\",\n    \"BOFA\",\n    \"BOM\",\n    \"BOND\",\n    \"BOO\",\n    \"BOOK\",\n    \"BOOKING\",\n    \"BOSCH\",\n    \"BOSTIK\",\n    \"BOSTON\",\n    \"BOT\",\n    \"BOUTIQUE\",\n    \"BOX\",\n    \"BR\",\n    \"BRADESCO\",\n    \"BRIDGESTONE\",\n    \"BROADWAY\",\n    \"BROKER\",\n    \"BROTHER\",\n    \"BRUSSELS\",\n    \"BS\",\n    \"BT\",\n    \"BUGATTI\",\n    \"BUILD\",\n    \"BUILDERS\",\n    \"BUSINESS\",\n    \"BUY\",\n    \"BUZZ\",\n    \"BV\",\n    \"BW\",\n    \"BY\",\n    \"BZ\",\n    \"BZH\",\n    \"CA\",\n    \"CAB\",\n    \"CAFE\",\n    \"CAL\",\n    \"CALL\",\n    \"CALVINKLEIN\",\n    \"CAM\",\n    \"CAMERA\",\n    \"CAMP\",\n    \"CANCERRESEARCH\",\n    \"CANON\",\n    \"CAPETOWN\",\n    \"CAPITAL\",\n    \"CAPITALONE\",\n    \"CAR\",\n    \"CARAVAN\",\n    \"CARDS\",\n    \"CARE\",\n    \"CAREER\",\n    \"CAREERS\",\n    \"CARS\",\n    \"CASA\",\n    \"CASE\",\n    \"CASH\",\n    \"CASINO\",\n    \"CAT\",\n    \"CATERING\",\n    \"CATHOLIC\",\n    \"CBA\",\n    \"CBN\",\n    \"CBRE\",\n    \"CBS\",\n    \"CC\",\n    \"CD\",\n    \"CENTER\",\n    \"CEO\",\n    \"CERN\",\n    \"CF\",\n    \"CFA\",\n    \"CFD\",\n    \"CG\",\n    \"CH\",\n    \"CHANEL\",\n    \"CHANNEL\",\n    \"CHARITY\",\n    \"CHASE\",\n    \"CHAT\",\n    \"CHEAP\",\n    \"CHINTAI\",\n    \"CHRISTMAS\",\n    \"CHROME\",\n    \"CHURCH\",\n    \"CI\",\n    \"CIPRIANI\",\n    \"CIRCLE\",\n    \"CISCO\",\n    \"CITADEL\",\n    \"CITI\",\n    \"CITIC\",\n    \"CITY\",\n    \"CITYEATS\",\n    \"CK\",\n    \"CL\",\n    \"CLAIMS\",\n    \"CLEANING\",\n    \"CLICK\",\n    \"CLINIC\",\n    \"CLINIQUE\",\n    \"CLOTHING\",\n    \"CLOUD\",\n    \"CLUB\",\n    \"CLUBMED\",\n    \"CM\",\n    \"CN\",\n    \"CO\",\n    \"COACH\",\n    \"CODES\",\n    \"COFFEE\",\n    \"COLLEGE\",\n    \"COLOGNE\",\n    \"COM\",\n    \"COMCAST\",\n    \"COMMBANK\",\n    \"COMMUNITY\",\n    \"COMPANY\",\n    \"COMPARE\",\n    \"COMPUTER\",\n    \"COMSEC\",\n    \"CONDOS\",\n    \"CONSTRUCTION\",\n    \"CONSULTING\",\n    \"CONTACT\",\n    \"CONTRACTORS\",\n    \"COOKING\",\n    \"COOKINGCHANNEL\",\n    \"COOL\",\n    \"COOP\",\n    \"CORSICA\",\n    \"COUNTRY\",\n    \"COUPON\",\n    \"COUPONS\",\n    \"COURSES\",\n    \"CPA\",\n    \"CR\",\n    \"CREDIT\",\n    \"CREDITCARD\",\n    \"CREDITUNION\",\n    \"CRICKET\",\n    \"CROWN\",\n    \"CRS\",\n    \"CRUISE\",\n    \"CRUISES\",\n    \"CU\",\n    \"CUISINELLA\",\n    \"CV\",\n    \"CW\",\n    \"CX\",\n    \"CY\",\n    \"CYMRU\",\n    \"CYOU\",\n    \"CZ\",\n    \"DABUR\",\n    \"DAD\",\n    \"DANCE\",\n    \"DATA\",\n    \"DATE\",\n    \"DATING\",\n    \"DATSUN\",\n    \"DAY\",\n    \"DCLK\",\n    \"DDS\",\n    \"DE\",\n    \"DEAL\",\n    \"DEALER\",\n    \"DEALS\",\n    \"DEGREE\",\n    \"DELIVERY\",\n    \"DELL\",\n    \"DELOITTE\",\n    \"DELTA\",\n    \"DEMOCRAT\",\n    \"DENTAL\",\n    \"DENTIST\",\n    \"DESI\",\n    \"DESIGN\",\n    \"DEV\",\n    \"DHL\",\n    \"DIAMONDS\",\n    \"DIET\",\n    \"DIGITAL\",\n    \"DIRECT\",\n    \"DIRECTORY\",\n    \"DISCOUNT\",\n    \"DISCOVER\",\n    \"DISH\",\n    \"DIY\",\n    \"DJ\",\n    \"DK\",\n    \"DM\",\n    \"DNP\",\n    \"DO\",\n    \"DOCS\",\n    \"DOCTOR\",\n    \"DOG\",\n    \"DOMAINS\",\n    \"DOT\",\n    \"DOWNLOAD\",\n    \"DRIVE\",\n    \"DTV\",\n    \"DUBAI\",\n    \"DUNLOP\",\n    \"DUPONT\",\n    \"DURBAN\",\n    \"DVAG\",\n    \"DVR\",\n    \"DZ\",\n    \"EARTH\",\n    \"EAT\",\n    \"EC\",\n    \"ECO\",\n    \"EDEKA\",\n    \"EDU\",\n    \"EDUCATION\",\n    \"EE\",\n    \"EG\",\n    \"EMAIL\",\n    \"EMERCK\",\n    \"ENERGY\",\n    \"ENGINEER\",\n    \"ENGINEERING\",\n    \"ENTERPRISES\",\n    \"EPSON\",\n    \"EQUIPMENT\",\n    \"ER\",\n    \"ERICSSON\",\n    \"ERNI\",\n    \"ES\",\n    \"ESQ\",\n    \"ESTATE\",\n    \"ET\",\n    \"ETISALAT\",\n    \"EU\",\n    \"EUROVISION\",\n    \"EUS\",\n    \"EVENTS\",\n    \"EXCHANGE\",\n    \"EXPERT\",\n    \"EXPOSED\",\n    \"EXPRESS\",\n    \"EXTRASPACE\",\n    \"FAGE\",\n    \"FAIL\",\n    \"FAIRWINDS\",\n    \"FAITH\",\n    \"FAMILY\",\n    \"FAN\",\n    \"FANS\",\n    \"FARM\",\n    \"FARMERS\",\n    \"FASHION\",\n    \"FAST\",\n    \"FEDEX\",\n    \"FEEDBACK\",\n    \"FERRARI\",\n    \"FERRERO\",\n    \"FI\",\n    \"FIAT\",\n    \"FIDELITY\",\n    \"FIDO\",\n    \"FILM\",\n    \"FINAL\",\n    \"FINANCE\",\n    \"FINANCIAL\",\n    \"FIRE\",\n    \"FIRESTONE\",\n    \"FIRMDALE\",\n    \"FISH\",\n    \"FISHING\",\n    \"FIT\",\n    \"FITNESS\",\n    \"FJ\",\n    \"FK\",\n    \"FLICKR\",\n    \"FLIGHTS\",\n    \"FLIR\",\n    \"FLORIST\",\n    \"FLOWERS\",\n    \"FLY\",\n    \"FM\",\n    \"FO\",\n    \"FOO\",\n    \"FOOD\",\n    \"FOODNETWORK\",\n    \"FOOTBALL\",\n    \"FORD\",\n    \"FOREX\",\n    \"FORSALE\",\n    \"FORUM\",\n    \"FOUNDATION\",\n    \"FOX\",\n    \"FR\",\n    \"FREE\",\n    \"FRESENIUS\",\n    \"FRL\",\n    \"FROGANS\",\n    \"FRONTDOOR\",\n    \"FRONTIER\",\n    \"FTR\",\n    \"FUJITSU\",\n    \"FUN\",\n    \"FUND\",\n    \"FURNITURE\",\n    \"FUTBOL\",\n    \"FYI\",\n    \"GA\",\n    \"GAL\",\n    \"GALLERY\",\n    \"GALLO\",\n    \"GALLUP\",\n    \"GAME\",\n    \"GAMES\",\n    \"GAP\",\n    \"GARDEN\",\n    \"GAY\",\n    \"GB\",\n    \"GBIZ\",\n    \"GD\",\n    \"GDN\",\n    \"GE\",\n    \"GEA\",\n    \"GENT\",\n    \"GENTING\",\n    \"GEORGE\",\n    \"GF\",\n    \"GG\",\n    \"GGEE\",\n    \"GH\",\n    \"GI\",\n    \"GIFT\",\n    \"GIFTS\",\n    \"GIVES\",\n    \"GIVING\",\n    \"GL\",\n    \"GLASS\",\n    \"GLE\",\n    \"GLOBAL\",\n    \"GLOBO\",\n    \"GM\",\n    \"GMAIL\",\n    \"GMBH\",\n    \"GMO\",\n    \"GMX\",\n    \"GN\",\n    \"GODADDY\",\n    \"GOLD\",\n    \"GOLDPOINT\",\n    \"GOLF\",\n    \"GOO\",\n    \"GOODYEAR\",\n    \"GOOG\",\n    \"GOOGLE\",\n    \"GOP\",\n    \"GOT\",\n    \"GOV\",\n    \"GP\",\n    \"GQ\",\n    \"GR\",\n    \"GRAINGER\",\n    \"GRAPHICS\",\n    \"GRATIS\",\n    \"GREEN\",\n    \"GRIPE\",\n    \"GROCERY\",\n    \"GROUP\",\n    \"GS\",\n    \"GT\",\n    \"GU\",\n    \"GUARDIAN\",\n    \"GUCCI\",\n    \"GUGE\",\n    \"GUIDE\",\n    \"GUITARS\",\n    \"GURU\",\n    \"GW\",\n    \"GY\",\n    \"HAIR\",\n    \"HAMBURG\",\n    \"HANGOUT\",\n    \"HAUS\",\n    \"HBO\",\n    \"HDFC\",\n    \"HDFCBANK\",\n    \"HEALTH\",\n    \"HEALTHCARE\",\n    \"HELP\",\n    \"HELSINKI\",\n    \"HERE\",\n    \"HERMES\",\n    \"HGTV\",\n    \"HIPHOP\",\n    \"HISAMITSU\",\n    \"HITACHI\",\n    \"HIV\",\n    \"HK\",\n    \"HKT\",\n    \"HM\",\n    \"HN\",\n    \"HOCKEY\",\n    \"HOLDINGS\",\n    \"HOLIDAY\",\n    \"HOMEDEPOT\",\n    \"HOMEGOODS\",\n    \"HOMES\",\n    \"HOMESENSE\",\n    \"HONDA\",\n    \"HORSE\",\n    \"HOSPITAL\",\n    \"HOST\",\n    \"HOSTING\",\n    \"HOT\",\n    \"HOTELES\",\n    \"HOTELS\",\n    \"HOTMAIL\",\n    \"HOUSE\",\n    \"HOW\",\n    \"HR\",\n    \"HSBC\",\n    \"HT\",\n    \"HU\",\n    \"HUGHES\",\n    \"HYATT\",\n    \"HYUNDAI\",\n    \"IBM\",\n    \"ICBC\",\n    \"ICE\",\n    \"ICU\",\n    \"ID\",\n    \"IE\",\n    \"IEEE\",\n    \"IFM\",\n    \"IKANO\",\n    \"IL\",\n    \"IM\",\n    \"IMAMAT\",\n    \"IMDB\",\n    \"IMMO\",\n    \"IMMOBILIEN\",\n    \"IN\",\n    \"INC\",\n    \"INDUSTRIES\",\n    \"INFINITI\",\n    \"INFO\",\n    \"ING\",\n    \"INK\",\n    \"INSTITUTE\",\n    \"INSURANCE\",\n    \"INSURE\",\n    \"INT\",\n    \"INTERNATIONAL\",\n    \"INTUIT\",\n    \"INVESTMENTS\",\n    \"IO\",\n    \"IPIRANGA\",\n    \"IQ\",\n    \"IR\",\n    \"IRISH\",\n    \"IS\",\n    \"ISMAILI\",\n    \"IST\",\n    \"ISTANBUL\",\n    \"IT\",\n    \"ITAU\",\n    \"ITV\",\n    \"JAGUAR\",\n    \"JAVA\",\n    \"JCB\",\n    \"JE\",\n    \"JEEP\",\n    \"JETZT\",\n    \"JEWELRY\",\n    \"JIO\",\n    \"JLL\",\n    \"JM\",\n    \"JMP\",\n    \"JNJ\",\n    \"JO\",\n    \"JOBS\",\n    \"JOBURG\",\n    \"JOT\",\n    \"JOY\",\n    \"JP\",\n    \"JPMORGAN\",\n    \"JPRS\",\n    \"JUEGOS\",\n    \"JUNIPER\",\n    \"KAUFEN\",\n    \"KDDI\",\n    \"KE\",\n    \"KERRYHOTELS\",\n    \"KERRYLOGISTICS\",\n    \"KERRYPROPERTIES\",\n    \"KFH\",\n    \"KG\",\n    \"KH\",\n    \"KI\",\n    \"KIA\",\n    \"KIM\",\n    \"KINDER\",\n    \"KINDLE\",\n    \"KITCHEN\",\n    \"KIWI\",\n    \"KM\",\n    \"KN\",\n    \"KOELN\",\n    \"KOMATSU\",\n    \"KOSHER\",\n    \"KP\",\n    \"KPMG\",\n    \"KPN\",\n    \"KR\",\n    \"KRD\",\n    \"KRED\",\n    \"KUOKGROUP\",\n    \"KW\",\n    \"KY\",\n    \"KYOTO\",\n    \"KZ\",\n    \"LA\",\n    \"LACAIXA\",\n    \"LAMBORGHINI\",\n    \"LAMER\",\n    \"LANCASTER\",\n    \"LANCIA\",\n    \"LAND\",\n    \"LANDROVER\",\n    \"LANXESS\",\n    \"LASALLE\",\n    \"LAT\",\n    \"LATINO\",\n    \"LATROBE\",\n    \"LAW\",\n    \"LAWYER\",\n    \"LB\",\n    \"LC\",\n    \"LDS\",\n    \"LEASE\",\n    \"LECLERC\",\n    \"LEFRAK\",\n    \"LEGAL\",\n    \"LEGO\",\n    \"LEXUS\",\n    \"LGBT\",\n    \"LI\",\n    \"LIDL\",\n    \"LIFE\",\n    \"LIFEINSURANCE\",\n    \"LIFESTYLE\",\n    \"LIGHTING\",\n    \"LIKE\",\n    \"LILLY\",\n    \"LIMITED\",\n    \"LIMO\",\n    \"LINCOLN\",\n    \"LINDE\",\n    \"LINK\",\n    \"LIPSY\",\n    \"LIVE\",\n    \"LIVING\",\n    \"LK\",\n    \"LLC\",\n    \"LLP\",\n    \"LOAN\",\n    \"LOANS\",\n    \"LOCKER\",\n    \"LOCUS\",\n    \"LOFT\",\n    \"LOL\",\n    \"LONDON\",\n    \"LOTTE\",\n    \"LOTTO\",\n    \"LOVE\",\n    \"LPL\",\n    \"LPLFINANCIAL\",\n    \"LR\",\n    \"LS\",\n    \"LT\",\n    \"LTD\",\n    \"LTDA\",\n    \"LU\",\n    \"LUNDBECK\",\n    \"LUXE\",\n    \"LUXURY\",\n    \"LV\",\n    \"LY\",\n    \"MA\",\n    \"MACYS\",\n    \"MADRID\",\n    \"MAIF\",\n    \"MAISON\",\n    \"MAKEUP\",\n    \"MAN\",\n    \"MANAGEMENT\",\n    \"MANGO\",\n    \"MAP\",\n    \"MARKET\",\n    \"MARKETING\",\n    \"MARKETS\",\n    \"MARRIOTT\",\n    \"MARSHALLS\",\n    \"MASERATI\",\n    \"MATTEL\",\n    \"MBA\",\n    \"MC\",\n    \"MCKINSEY\",\n    \"MD\",\n    \"ME\",\n    \"MED\",\n    \"MEDIA\",\n    \"MEET\",\n    \"MELBOURNE\",\n    \"MEME\",\n    \"MEMORIAL\",\n    \"MEN\",\n    \"MENU\",\n    \"MERCKMSD\",\n    \"MG\",\n    \"MH\",\n    \"MIAMI\",\n    \"MICROSOFT\",\n    \"MIL\",\n    \"MINI\",\n    \"MINT\",\n    \"MIT\",\n    \"MITSUBISHI\",\n    \"MK\",\n    \"ML\",\n    \"MLB\",\n    \"MLS\",\n    \"MM\",\n    \"MMA\",\n    \"MN\",\n    \"MO\",\n    \"MOBI\",\n    \"MOBILE\",\n    \"MODA\",\n    \"MOE\",\n    \"MOI\",\n    \"MOM\",\n    \"MONASH\",\n    \"MONEY\",\n    \"MONSTER\",\n    \"MORMON\",\n    \"MORTGAGE\",\n    \"MOSCOW\",\n    \"MOTO\",\n    \"MOTORCYCLES\",\n    \"MOV\",\n    \"MOVIE\",\n    \"MP\",\n    \"MQ\",\n    \"MR\",\n    \"MS\",\n    \"MSD\",\n    \"MT\",\n    \"MTN\",\n    \"MTR\",\n    \"MU\",\n    \"MUSEUM\",\n    \"MUSIC\",\n    \"MUTUAL\",\n    \"MV\",\n    \"MW\",\n    \"MX\",\n    \"MY\",\n    \"MZ\",\n    \"NA\",\n    \"NAB\",\n    \"NAGOYA\",\n    \"NAME\",\n    \"NATURA\",\n    \"NAVY\",\n    \"NBA\",\n    \"NC\",\n    \"NE\",\n    \"NEC\",\n    \"NET\",\n    \"NETBANK\",\n    \"NETFLIX\",\n    \"NETWORK\",\n    \"NEUSTAR\",\n    \"NEW\",\n    \"NEWS\",\n    \"NEXT\",\n    \"NEXTDIRECT\",\n    \"NEXUS\",\n    \"NF\",\n    \"NFL\",\n    \"NG\",\n    \"NGO\",\n    \"NHK\",\n    \"NI\",\n    \"NICO\",\n    \"NIKE\",\n    \"NIKON\",\n    \"NINJA\",\n    \"NISSAN\",\n    \"NISSAY\",\n    \"NL\",\n    \"NO\",\n    \"NOKIA\",\n    \"NORTHWESTERNMUTUAL\",\n    \"NORTON\",\n    \"NOW\",\n    \"NOWRUZ\",\n    \"NOWTV\",\n    \"NP\",\n    \"NR\",\n    \"NRA\",\n    \"NRW\",\n    \"NTT\",\n    \"NU\",\n    \"NYC\",\n    \"NZ\",\n    \"OBI\",\n    \"OBSERVER\",\n    \"OFFICE\",\n    \"OKINAWA\",\n    \"OLAYAN\",\n    \"OLAYANGROUP\",\n    \"OLDNAVY\",\n    \"OLLO\",\n    \"OM\",\n    \"OMEGA\",\n    \"ONE\",\n    \"ONG\",\n    \"ONL\",\n    \"ONLINE\",\n    \"OOO\",\n    \"OPEN\",\n    \"ORACLE\",\n    \"ORANGE\",\n    \"ORG\",\n    \"ORGANIC\",\n    \"ORIGINS\",\n    \"OSAKA\",\n    \"OTSUKA\",\n    \"OTT\",\n    \"OVH\",\n    \"PA\",\n    \"PAGE\",\n    \"PANASONIC\",\n    \"PARIS\",\n    \"PARS\",\n    \"PARTNERS\",\n    \"PARTS\",\n    \"PARTY\",\n    \"PASSAGENS\",\n    \"PAY\",\n    \"PCCW\",\n    \"PE\",\n    \"PET\",\n    \"PF\",\n    \"PFIZER\",\n    \"PG\",\n    \"PH\",\n    \"PHARMACY\",\n    \"PHD\",\n    \"PHILIPS\",\n    \"PHONE\",\n    \"PHOTO\",\n    \"PHOTOGRAPHY\",\n    \"PHOTOS\",\n    \"PHYSIO\",\n    \"PICS\",\n    \"PICTET\",\n    \"PICTURES\",\n    \"PID\",\n    \"PIN\",\n    \"PING\",\n    \"PINK\",\n    \"PIONEER\",\n    \"PIZZA\",\n    \"PK\",\n    \"PL\",\n    \"PLACE\",\n    \"PLAY\",\n    \"PLAYSTATION\",\n    \"PLUMBING\",\n    \"PLUS\",\n    \"PM\",\n    \"PN\",\n    \"PNC\",\n    \"POHL\",\n    \"POKER\",\n    \"POLITIE\",\n    \"PORN\",\n    \"POST\",\n    \"PR\",\n    \"PRAMERICA\",\n    \"PRAXI\",\n    \"PRESS\",\n    \"PRIME\",\n    \"PRO\",\n    \"PROD\",\n    \"PRODUCTIONS\",\n    \"PROF\",\n    \"PROGRESSIVE\",\n    \"PROMO\",\n    \"PROPERTIES\",\n    \"PROPERTY\",\n    \"PROTECTION\",\n    \"PRU\",\n    \"PRUDENTIAL\",\n    \"PS\",\n    \"PT\",\n    \"PUB\",\n    \"PW\",\n    \"PWC\",\n    \"PY\",\n    \"QA\",\n    \"QPON\",\n    \"QUEBEC\",\n    \"QUEST\",\n    \"RACING\",\n    \"RADIO\",\n    \"RE\",\n    \"READ\",\n    \"REALESTATE\",\n    \"REALTOR\",\n    \"REALTY\",\n    \"RECIPES\",\n    \"RED\",\n    \"REDSTONE\",\n    \"REDUMBRELLA\",\n    \"REHAB\",\n    \"REISE\",\n    \"REISEN\",\n    \"REIT\",\n    \"RELIANCE\",\n    \"REN\",\n    \"RENT\",\n    \"RENTALS\",\n    \"REPAIR\",\n    \"REPORT\",\n    \"REPUBLICAN\",\n    \"REST\",\n    \"RESTAURANT\",\n    \"REVIEW\",\n    \"REVIEWS\",\n    \"REXROTH\",\n    \"RICH\",\n    \"RICHARDLI\",\n    \"RICOH\",\n    \"RIL\",\n    \"RIO\",\n    \"RIP\",\n    \"RO\",\n    \"ROCHER\",\n    \"ROCKS\",\n    \"RODEO\",\n    \"ROGERS\",\n    \"ROOM\",\n    \"RS\",\n    \"RSVP\",\n    \"RU\",\n    \"RUGBY\",\n    \"RUHR\",\n    \"RUN\",\n    \"RW\",\n    \"RWE\",\n    \"RYUKYU\",\n    \"SA\",\n    \"SAARLAND\",\n    \"SAFE\",\n    \"SAFETY\",\n    \"SAKURA\",\n    \"SALE\",\n    \"SALON\",\n    \"SAMSCLUB\",\n    \"SAMSUNG\",\n    \"SANDVIK\",\n    \"SANDVIKCOROMANT\",\n    \"SANOFI\",\n    \"SAP\",\n    \"SARL\",\n    \"SAS\",\n    \"SAVE\",\n    \"SAXO\",\n    \"SB\",\n    \"SBI\",\n    \"SBS\",\n    \"SC\",\n    \"SCA\",\n    \"SCB\",\n    \"SCHAEFFLER\",\n    \"SCHMIDT\",\n    \"SCHOLARSHIPS\",\n    \"SCHOOL\",\n    \"SCHULE\",\n    \"SCHWARZ\",\n    \"SCIENCE\",\n    \"SCOT\",\n    \"SD\",\n    \"SE\",\n    \"SEARCH\",\n    \"SEAT\",\n    \"SECURE\",\n    \"SECURITY\",\n    \"SEEK\",\n    \"SELECT\",\n    \"SENER\",\n    \"SERVICES\",\n    \"SES\",\n    \"SEVEN\",\n    \"SEW\",\n    \"SEX\",\n    \"SEXY\",\n    \"SFR\",\n    \"SG\",\n    \"SH\",\n    \"SHANGRILA\",\n    \"SHARP\",\n    \"SHAW\",\n    \"SHELL\",\n    \"SHIA\",\n    \"SHIKSHA\",\n    \"SHOES\",\n    \"SHOP\",\n    \"SHOPPING\",\n    \"SHOUJI\",\n    \"SHOW\",\n    \"SHOWTIME\",\n    \"SI\",\n    \"SILK\",\n    \"SINA\",\n    \"SINGLES\",\n    \"SITE\",\n    \"SJ\",\n    \"SK\",\n    \"SKI\",\n    \"SKIN\",\n    \"SKY\",\n    \"SKYPE\",\n    \"SL\",\n    \"SLING\",\n    \"SM\",\n    \"SMART\",\n    \"SMILE\",\n    \"SN\",\n    \"SNCF\",\n    \"SO\",\n    \"SOCCER\",\n    \"SOCIAL\",\n    \"SOFTBANK\",\n    \"SOFTWARE\",\n    \"SOHU\",\n    \"SOLAR\",\n    \"SOLUTIONS\",\n    \"SONG\",\n    \"SONY\",\n    \"SOY\",\n    \"SPA\",\n    \"SPACE\",\n    \"SPORT\",\n    \"SPOT\",\n    \"SR\",\n    \"SRL\",\n    \"SS\",\n    \"ST\",\n    \"STADA\",\n    \"STAPLES\",\n    \"STAR\",\n    \"STATEBANK\",\n    \"STATEFARM\",\n    \"STC\",\n    \"STCGROUP\",\n    \"STOCKHOLM\",\n    \"STORAGE\",\n    \"STORE\",\n    \"STREAM\",\n    \"STUDIO\",\n    \"STUDY\",\n    \"STYLE\",\n    \"SU\",\n    \"SUCKS\",\n    \"SUPPLIES\",\n    \"SUPPLY\",\n    \"SUPPORT\",\n    \"SURF\",\n    \"SURGERY\",\n    \"SUZUKI\",\n    \"SV\",\n    \"SWATCH\",\n    \"SWISS\",\n    \"SX\",\n    \"SY\",\n    \"SYDNEY\",\n    \"SYSTEMS\",\n    \"SZ\",\n    \"TAB\",\n    \"TAIPEI\",\n    \"TALK\",\n    \"TAOBAO\",\n    \"TARGET\",\n    \"TATAMOTORS\",\n    \"TATAR\",\n    \"TATTOO\",\n    \"TAX\",\n    \"TAXI\",\n    \"TC\",\n    \"TCI\",\n    \"TD\",\n    \"TDK\",\n    \"TEAM\",\n    \"TECH\",\n    \"TECHNOLOGY\",\n    \"TEL\",\n    \"TEMASEK\",\n    \"TENNIS\",\n    \"TEVA\",\n    \"TF\",\n    \"TG\",\n    \"TH\",\n    \"THD\",\n    \"THEATER\",\n    \"THEATRE\",\n    \"TIAA\",\n    \"TICKETS\",\n    \"TIENDA\",\n    \"TIFFANY\",\n    \"TIPS\",\n    \"TIRES\",\n    \"TIROL\",\n    \"TJ\",\n    \"TJMAXX\",\n    \"TJX\",\n    \"TK\",\n    \"TKMAXX\",\n    \"TL\",\n    \"TM\",\n    \"TMALL\",\n    \"TN\",\n    \"TO\",\n    \"TODAY\",\n    \"TOKYO\",\n    \"TOOLS\",\n    \"TOP\",\n    \"TORAY\",\n    \"TOSHIBA\",\n    \"TOTAL\",\n    \"TOURS\",\n    \"TOWN\",\n    \"TOYOTA\",\n    \"TOYS\",\n    \"TR\",\n    \"TRADE\",\n    \"TRADING\",\n    \"TRAINING\",\n    \"TRAVEL\",\n    \"TRAVELCHANNEL\",\n    \"TRAVELERS\",\n    \"TRAVELERSINSURANCE\",\n    \"TRUST\",\n    \"TRV\",\n    \"TT\",\n    \"TUBE\",\n    \"TUI\",\n    \"TUNES\",\n    \"TUSHU\",\n    \"TV\",\n    \"TVS\",\n    \"TW\",\n    \"TZ\",\n    \"UA\",\n    \"UBANK\",\n    \"UBS\",\n    \"UG\",\n    \"UK\",\n    \"UNICOM\",\n    \"UNIVERSITY\",\n    \"UNO\",\n    \"UOL\",\n    \"UPS\",\n    \"US\",\n    \"UY\",\n    \"UZ\",\n    \"VA\",\n    \"VACATIONS\",\n    \"VANA\",\n    \"VANGUARD\",\n    \"VC\",\n    \"VE\",\n    \"VEGAS\",\n    \"VENTURES\",\n    \"VERISIGN\",\n    \"VERSICHERUNG\",\n    \"VET\",\n    \"VG\",\n    \"VI\",\n    \"VIAJES\",\n    \"VIDEO\",\n    \"VIG\",\n    \"VIKING\",\n    \"VILLAS\",\n    \"VIN\",\n    \"VIP\",\n    \"VIRGIN\",\n    \"VISA\",\n    \"VISION\",\n    \"VIVA\",\n    \"VIVO\",\n    \"VLAANDEREN\",\n    \"VN\",\n    \"VODKA\",\n    \"VOLKSWAGEN\",\n    \"VOLVO\",\n    \"VOTE\",\n    \"VOTING\",\n    \"VOTO\",\n    \"VOYAGE\",\n    \"VU\",\n    \"VUELOS\",\n    \"WALES\",\n    \"WALMART\",\n    \"WALTER\",\n    \"WANG\",\n    \"WANGGOU\",\n    \"WATCH\",\n    \"WATCHES\",\n    \"WEATHER\",\n    \"WEATHERCHANNEL\",\n    \"WEBCAM\",\n    \"WEBER\",\n    \"WEBSITE\",\n    \"WED\",\n    \"WEDDING\",\n    \"WEIBO\",\n    \"WEIR\",\n    \"WF\",\n    \"WHOSWHO\",\n    \"WIEN\",\n    \"WIKI\",\n    \"WILLIAMHILL\",\n    \"WIN\",\n    \"WINDOWS\",\n    \"WINE\",\n    \"WINNERS\",\n    \"WME\",\n    \"WOLTERSKLUWER\",\n    \"WOODSIDE\",\n    \"WORK\",\n    \"WORKS\",\n    \"WORLD\",\n    \"WOW\",\n    \"WS\",\n    \"WTC\",\n    \"WTF\",\n    \"XBOX\",\n    \"XEROX\",\n    \"XFINITY\",\n    \"XIHUAN\",\n    \"XIN\",\n    \"XN--11B4C3D\",\n    \"XN--1CK2E1B\",\n    \"XN--1QQW23A\",\n    \"XN--2SCRJ9C\",\n    \"XN--30RR7Y\",\n    \"XN--3BST00M\",\n    \"XN--3DS443G\",\n    \"XN--3E0B707E\",\n    \"XN--3HCRJ9C\",\n    \"XN--3PXU8K\",\n    \"XN--42C2D9A\",\n    \"XN--45BR5CYL\",\n    \"XN--45BRJ9C\",\n    \"XN--45Q11C\",\n    \"XN--4DBRK0CE\",\n    \"XN--4GBRIM\",\n    \"XN--54B7FTA0CC\",\n    \"XN--55QW42G\",\n    \"XN--55QX5D\",\n    \"XN--5SU34J936BGSG\",\n    \"XN--5TZM5G\",\n    \"XN--6FRZ82G\",\n    \"XN--6QQ986B3XL\",\n    \"XN--80ADXHKS\",\n    \"XN--80AO21A\",\n    \"XN--80AQECDR1A\",\n    \"XN--80ASEHDB\",\n    \"XN--80ASWG\",\n    \"XN--8Y0A063A\",\n    \"XN--90A3AC\",\n    \"XN--90AE\",\n    \"XN--90AIS\",\n    \"XN--9DBQ2A\",\n    \"XN--9ET52U\",\n    \"XN--9KRT00A\",\n    \"XN--B4W605FERD\",\n    \"XN--BCK1B9A5DRE4C\",\n    \"XN--C1AVG\",\n    \"XN--C2BR7G\",\n    \"XN--CCK2B3B\",\n    \"XN--CCKWCXETD\",\n    \"XN--CG4BKI\",\n    \"XN--CLCHC0EA0B2G2A9GCD\",\n    \"XN--CZR694B\",\n    \"XN--CZRS0T\",\n    \"XN--CZRU2D\",\n    \"XN--D1ACJ3B\",\n    \"XN--D1ALF\",\n    \"XN--E1A4C\",\n    \"XN--ECKVDTC9D\",\n    \"XN--EFVY88H\",\n    \"XN--FCT429K\",\n    \"XN--FHBEI\",\n    \"XN--FIQ228C5HS\",\n    \"XN--FIQ64B\",\n    \"XN--FIQS8S\",\n    \"XN--FIQZ9S\",\n    \"XN--FJQ720A\",\n    \"XN--FLW351E\",\n    \"XN--FPCRJ9C3D\",\n    \"XN--FZC2C9E2C\",\n    \"XN--FZYS8D69UVGM\",\n    \"XN--G2XX48C\",\n    \"XN--GCKR3F0F\",\n    \"XN--GECRJ9C\",\n    \"XN--GK3AT1E\",\n    \"XN--H2BREG3EVE\",\n    \"XN--H2BRJ9C\",\n    \"XN--H2BRJ9C8C\",\n    \"XN--HXT814E\",\n    \"XN--I1B6B1A6A2E\",\n    \"XN--IMR513N\",\n    \"XN--IO0A7I\",\n    \"XN--J1AEF\",\n    \"XN--J1AMH\",\n    \"XN--J6W193G\",\n    \"XN--JLQ480N2RG\",\n    \"XN--JLQ61U9W7B\",\n    \"XN--JVR189M\",\n    \"XN--KCRX77D1X4A\",\n    \"XN--KPRW13D\",\n    \"XN--KPRY57D\",\n    \"XN--KPUT3I\",\n    \"XN--L1ACC\",\n    \"XN--LGBBAT1AD8J\",\n    \"XN--MGB9AWBF\",\n    \"XN--MGBA3A3EJT\",\n    \"XN--MGBA3A4F16A\",\n    \"XN--MGBA7C0BBN0A\",\n    \"XN--MGBAAKC7DVF\",\n    \"XN--MGBAAM7A8H\",\n    \"XN--MGBAB2BD\",\n    \"XN--MGBAH1A3HJKRD\",\n    \"XN--MGBAI9AZGQP6J\",\n    \"XN--MGBAYH7GPA\",\n    \"XN--MGBBH1A\",\n    \"XN--MGBBH1A71E\",\n    \"XN--MGBC0A9AZCG\",\n    \"XN--MGBCA7DZDO\",\n    \"XN--MGBCPQ6GPA1A\",\n    \"XN--MGBERP4A5D4AR\",\n    \"XN--MGBGU82A\",\n    \"XN--MGBI4ECEXP\",\n    \"XN--MGBPL2FH\",\n    \"XN--MGBT3DHD\",\n    \"XN--MGBTX2B\",\n    \"XN--MGBX4CD0AB\",\n    \"XN--MIX891F\",\n    \"XN--MK1BU44C\",\n    \"XN--MXTQ1M\",\n    \"XN--NGBC5AZD\",\n    \"XN--NGBE9E0A\",\n    \"XN--NGBRX\",\n    \"XN--NODE\",\n    \"XN--NQV7F\",\n    \"XN--NQV7FS00EMA\",\n    \"XN--NYQY26A\",\n    \"XN--O3CW4H\",\n    \"XN--OGBPF8FL\",\n    \"XN--OTU796D\",\n    \"XN--P1ACF\",\n    \"XN--P1AI\",\n    \"XN--PGBS0DH\",\n    \"XN--PSSY2U\",\n    \"XN--Q7CE6A\",\n    \"XN--Q9JYB4C\",\n    \"XN--QCKA1PMC\",\n    \"XN--QXA6A\",\n    \"XN--QXAM\",\n    \"XN--RHQV96G\",\n    \"XN--ROVU88B\",\n    \"XN--RVC1E0AM3E\",\n    \"XN--S9BRJ9C\",\n    \"XN--SES554G\",\n    \"XN--T60B56A\",\n    \"XN--TCKWE\",\n    \"XN--TIQ49XQYJ\",\n    \"XN--UNUP4Y\",\n    \"XN--VERMGENSBERATER-CTB\",\n    \"XN--VERMGENSBERATUNG-PWB\",\n    \"XN--VHQUV\",\n    \"XN--VUQ861B\",\n    \"XN--W4R85EL8FHU5DNRA\",\n    \"XN--W4RS40L\",\n    \"XN--WGBH1C\",\n    \"XN--WGBL6A\",\n    \"XN--XHQ521B\",\n    \"XN--XKC2AL3HYE2A\",\n    \"XN--XKC2DL3A5EE0H\",\n    \"XN--Y9A3AQ\",\n    \"XN--YFRO4I67O\",\n    \"XN--YGBI2AMMX\",\n    \"XN--ZFR164B\",\n    \"XXX\",\n    \"XYZ\",\n    \"YACHTS\",\n    \"YAHOO\",\n    \"YAMAXUN\",\n    \"YANDEX\",\n    \"YE\",\n    \"YODOBASHI\",\n    \"YOGA\",\n    \"YOKOHAMA\",\n    \"YOU\",\n    \"YOUTUBE\",\n    \"YT\",\n    \"YUN\",\n    \"ZA\",\n    \"ZAPPOS\",\n    \"ZARA\",\n    \"ZERO\",\n    \"ZIP\",\n    \"ZM\",\n    \"ZONE\",\n    \"ZUERICH\",\n    \"ZW\"\n];\n// Keep as upper-case to make updating from source easier\nmodule.exports = new Set(internals.tlds.map((tld)=>tld.toLowerCase()));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sideway/address/lib/tlds.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sideway/address/lib/uri.js":
/*!**************************************************!*\
  !*** ./node_modules/@sideway/address/lib/uri.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst Assert = __webpack_require__(/*! @hapi/hoek/lib/assert */ \"(ssr)/./node_modules/@hapi/hoek/lib/assert.js\");\nconst EscapeRegex = __webpack_require__(/*! @hapi/hoek/lib/escapeRegex */ \"(ssr)/./node_modules/@hapi/hoek/lib/escapeRegex.js\");\nconst internals = {};\ninternals.generate = function() {\n    const rfc3986 = {};\n    const hexDigit = \"\\\\dA-Fa-f\"; // HEXDIG = DIGIT / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\"\n    const hexDigitOnly = \"[\" + hexDigit + \"]\";\n    const unreserved = \"\\\\w-\\\\.~\"; // unreserved = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n    const subDelims = \"!\\\\$&'\\\\(\\\\)\\\\*\\\\+,;=\"; // sub-delims = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n    const pctEncoded = \"%\" + hexDigit; // pct-encoded = \"%\" HEXDIG HEXDIG\n    const pchar = unreserved + pctEncoded + subDelims + \":@\"; // pchar = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n    const pcharOnly = \"[\" + pchar + \"]\";\n    const decOctect = \"(?:0{0,2}\\\\d|0?[1-9]\\\\d|1\\\\d\\\\d|2[0-4]\\\\d|25[0-5])\"; // dec-octet = DIGIT / %x31-39 DIGIT / \"1\" 2DIGIT / \"2\" %x30-34 DIGIT / \"25\" %x30-35  ; 0-9 / 10-99 / 100-199 / 200-249 / 250-255\n    rfc3986.ipv4address = \"(?:\" + decOctect + \"\\\\.){3}\" + decOctect; // IPv4address = dec-octet \".\" dec-octet \".\" dec-octet \".\" dec-octet\n    /*\n        h16 = 1*4HEXDIG ; 16 bits of address represented in hexadecimal\n        ls32 = ( h16 \":\" h16 ) / IPv4address ; least-significant 32 bits of address\n        IPv6address =                            6( h16 \":\" ) ls32\n                    /                       \"::\" 5( h16 \":\" ) ls32\n                    / [               h16 ] \"::\" 4( h16 \":\" ) ls32\n                    / [ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n                    / [ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n                    / [ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n                    / [ *4( h16 \":\" ) h16 ] \"::\"              ls32\n                    / [ *5( h16 \":\" ) h16 ] \"::\"              h16\n                    / [ *6( h16 \":\" ) h16 ] \"::\"\n    */ const h16 = hexDigitOnly + \"{1,4}\";\n    const ls32 = \"(?:\" + h16 + \":\" + h16 + \"|\" + rfc3986.ipv4address + \")\";\n    const IPv6SixHex = \"(?:\" + h16 + \":){6}\" + ls32;\n    const IPv6FiveHex = \"::(?:\" + h16 + \":){5}\" + ls32;\n    const IPv6FourHex = \"(?:\" + h16 + \")?::(?:\" + h16 + \":){4}\" + ls32;\n    const IPv6ThreeHex = \"(?:(?:\" + h16 + \":){0,1}\" + h16 + \")?::(?:\" + h16 + \":){3}\" + ls32;\n    const IPv6TwoHex = \"(?:(?:\" + h16 + \":){0,2}\" + h16 + \")?::(?:\" + h16 + \":){2}\" + ls32;\n    const IPv6OneHex = \"(?:(?:\" + h16 + \":){0,3}\" + h16 + \")?::\" + h16 + \":\" + ls32;\n    const IPv6NoneHex = \"(?:(?:\" + h16 + \":){0,4}\" + h16 + \")?::\" + ls32;\n    const IPv6NoneHex2 = \"(?:(?:\" + h16 + \":){0,5}\" + h16 + \")?::\" + h16;\n    const IPv6NoneHex3 = \"(?:(?:\" + h16 + \":){0,6}\" + h16 + \")?::\";\n    rfc3986.ipv4Cidr = \"(?:\\\\d|[1-2]\\\\d|3[0-2])\"; // IPv4 cidr = DIGIT / %x31-32 DIGIT / \"3\" %x30-32  ; 0-9 / 10-29 / 30-32\n    rfc3986.ipv6Cidr = \"(?:0{0,2}\\\\d|0?[1-9]\\\\d|1[01]\\\\d|12[0-8])\"; // IPv6 cidr = DIGIT / %x31-39 DIGIT / \"1\" %x0-1 DIGIT / \"12\" %x0-8;   0-9 / 10-99 / 100-119 / 120-128\n    rfc3986.ipv6address = \"(?:\" + IPv6SixHex + \"|\" + IPv6FiveHex + \"|\" + IPv6FourHex + \"|\" + IPv6ThreeHex + \"|\" + IPv6TwoHex + \"|\" + IPv6OneHex + \"|\" + IPv6NoneHex + \"|\" + IPv6NoneHex2 + \"|\" + IPv6NoneHex3 + \")\";\n    rfc3986.ipvFuture = \"v\" + hexDigitOnly + \"+\\\\.[\" + unreserved + subDelims + \":]+\"; // IPvFuture = \"v\" 1*HEXDIG \".\" 1*( unreserved / sub-delims / \":\" )\n    rfc3986.scheme = \"[a-zA-Z][a-zA-Z\\\\d+-\\\\.]*\"; // scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    rfc3986.schemeRegex = new RegExp(rfc3986.scheme);\n    const userinfo = \"[\" + unreserved + pctEncoded + subDelims + \":]*\"; // userinfo = *( unreserved / pct-encoded / sub-delims / \":\" )\n    const IPLiteral = \"\\\\[(?:\" + rfc3986.ipv6address + \"|\" + rfc3986.ipvFuture + \")\\\\]\"; // IP-literal = \"[\" ( IPv6address / IPvFuture  ) \"]\"\n    const regName = \"[\" + unreserved + pctEncoded + subDelims + \"]{1,255}\"; // reg-name = *( unreserved / pct-encoded / sub-delims )\n    const host = \"(?:\" + IPLiteral + \"|\" + rfc3986.ipv4address + \"|\" + regName + \")\"; // host = IP-literal / IPv4address / reg-name\n    const port = \"\\\\d*\"; // port = *DIGIT\n    const authority = \"(?:\" + userinfo + \"@)?\" + host + \"(?::\" + port + \")?\"; // authority   = [ userinfo \"@\" ] host [ \":\" port ]\n    const authorityCapture = \"(?:\" + userinfo + \"@)?(\" + host + \")(?::\" + port + \")?\";\n    /*\n        segment       = *pchar\n        segment-nz    = 1*pchar\n        path          = path-abempty    ; begins with \"/\" '|' is empty\n                    / path-absolute   ; begins with \"/\" but not \"//\"\n                    / path-noscheme   ; begins with a non-colon segment\n                    / path-rootless   ; begins with a segment\n                    / path-empty      ; zero characters\n        path-abempty  = *( \"/\" segment )\n        path-absolute = \"/\" [ segment-nz *( \"/\" segment ) ]\n        path-rootless = segment-nz *( \"/\" segment )\n    */ const segment = pcharOnly + \"*\";\n    const segmentNz = pcharOnly + \"+\";\n    const segmentNzNc = \"[\" + unreserved + pctEncoded + subDelims + \"@\" + \"]+\";\n    const pathEmpty = \"\";\n    const pathAbEmpty = \"(?:\\\\/\" + segment + \")*\";\n    const pathAbsolute = \"\\\\/(?:\" + segmentNz + pathAbEmpty + \")?\";\n    const pathRootless = segmentNz + pathAbEmpty;\n    const pathNoScheme = segmentNzNc + pathAbEmpty;\n    const pathAbNoAuthority = \"(?:\\\\/\\\\/\\\\/\" + segment + pathAbEmpty + \")\"; // Used by file:///\n    // hier-part = \"//\" authority path\n    rfc3986.hierPart = \"(?:\" + \"(?:\\\\/\\\\/\" + authority + pathAbEmpty + \")\" + \"|\" + pathAbsolute + \"|\" + pathRootless + \"|\" + pathAbNoAuthority + \")\";\n    rfc3986.hierPartCapture = \"(?:\" + \"(?:\\\\/\\\\/\" + authorityCapture + pathAbEmpty + \")\" + \"|\" + pathAbsolute + \"|\" + pathRootless + \")\";\n    // relative-part = \"//\" authority path-abempty / path-absolute / path-noscheme / path-empty\n    rfc3986.relativeRef = \"(?:\" + \"(?:\\\\/\\\\/\" + authority + pathAbEmpty + \")\" + \"|\" + pathAbsolute + \"|\" + pathNoScheme + \"|\" + pathEmpty + \")\";\n    rfc3986.relativeRefCapture = \"(?:\" + \"(?:\\\\/\\\\/\" + authorityCapture + pathAbEmpty + \")\" + \"|\" + pathAbsolute + \"|\" + pathNoScheme + \"|\" + pathEmpty + \")\";\n    // query = *( pchar / \"/\" / \"?\" )\n    // query = *( pchar / \"[\" / \"]\" / \"/\" / \"?\" )\n    rfc3986.query = \"[\" + pchar + \"\\\\/\\\\?]*(?=#|$)\"; //Finish matching either at the fragment part '|' end of the line.\n    rfc3986.queryWithSquareBrackets = \"[\" + pchar + \"\\\\[\\\\]\\\\/\\\\?]*(?=#|$)\";\n    // fragment = *( pchar / \"/\" / \"?\" )\n    rfc3986.fragment = \"[\" + pchar + \"\\\\/\\\\?]*\";\n    return rfc3986;\n};\ninternals.rfc3986 = internals.generate();\nexports.ip = {\n    v4Cidr: internals.rfc3986.ipv4Cidr,\n    v6Cidr: internals.rfc3986.ipv6Cidr,\n    ipv4: internals.rfc3986.ipv4address,\n    ipv6: internals.rfc3986.ipv6address,\n    ipvfuture: internals.rfc3986.ipvFuture\n};\ninternals.createRegex = function(options) {\n    const rfc = internals.rfc3986;\n    // Construct expression\n    const query = options.allowQuerySquareBrackets ? rfc.queryWithSquareBrackets : rfc.query;\n    const suffix = \"(?:\\\\?\" + query + \")?\" + \"(?:#\" + rfc.fragment + \")?\";\n    // relative-ref = relative-part [ \"?\" query ] [ \"#\" fragment ]\n    const relative = options.domain ? rfc.relativeRefCapture : rfc.relativeRef;\n    if (options.relativeOnly) {\n        return internals.wrap(relative + suffix);\n    }\n    // Custom schemes\n    let customScheme = \"\";\n    if (options.scheme) {\n        Assert(options.scheme instanceof RegExp || typeof options.scheme === \"string\" || Array.isArray(options.scheme), \"scheme must be a RegExp, String, or Array\");\n        const schemes = [].concat(options.scheme);\n        Assert(schemes.length >= 1, \"scheme must have at least 1 scheme specified\");\n        // Flatten the array into a string to be used to match the schemes\n        const selections = [];\n        for(let i = 0; i < schemes.length; ++i){\n            const scheme = schemes[i];\n            Assert(scheme instanceof RegExp || typeof scheme === \"string\", \"scheme at position \" + i + \" must be a RegExp or String\");\n            if (scheme instanceof RegExp) {\n                selections.push(scheme.source.toString());\n            } else {\n                Assert(rfc.schemeRegex.test(scheme), \"scheme at position \" + i + \" must be a valid scheme\");\n                selections.push(EscapeRegex(scheme));\n            }\n        }\n        customScheme = selections.join(\"|\");\n    }\n    // URI = scheme \":\" hier-part [ \"?\" query ] [ \"#\" fragment ]\n    const scheme = customScheme ? \"(?:\" + customScheme + \")\" : rfc.scheme;\n    const absolute = \"(?:\" + scheme + \":\" + (options.domain ? rfc.hierPartCapture : rfc.hierPart) + \")\";\n    const prefix = options.allowRelative ? \"(?:\" + absolute + \"|\" + relative + \")\" : absolute;\n    return internals.wrap(prefix + suffix, customScheme);\n};\ninternals.wrap = function(raw, scheme) {\n    raw = `(?=.)(?!https?\\:/(?:$|[^/]))(?!https?\\:///)(?!https?\\:[^/])${raw}`; // Require at least one character and explicitly forbid 'http:/' or HTTP with empty domain\n    return {\n        raw,\n        regex: new RegExp(`^${raw}$`),\n        scheme\n    };\n};\ninternals.uriRegex = internals.createRegex({});\nexports.regex = function(options = {}) {\n    if (options.scheme || options.allowRelative || options.relativeOnly || options.allowQuerySquareBrackets || options.domain) {\n        return internals.createRegex(options);\n    }\n    return internals.uriRegex;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sideway/address/lib/uri.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sideway/formula/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@sideway/formula/lib/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nconst internals = {\n    operators: [\n        \"!\",\n        \"^\",\n        \"*\",\n        \"/\",\n        \"%\",\n        \"+\",\n        \"-\",\n        \"<\",\n        \"<=\",\n        \">\",\n        \">=\",\n        \"==\",\n        \"!=\",\n        \"&&\",\n        \"||\",\n        \"??\"\n    ],\n    operatorCharacters: [\n        \"!\",\n        \"^\",\n        \"*\",\n        \"/\",\n        \"%\",\n        \"+\",\n        \"-\",\n        \"<\",\n        \"=\",\n        \">\",\n        \"&\",\n        \"|\",\n        \"?\"\n    ],\n    operatorsOrder: [\n        [\n            \"^\"\n        ],\n        [\n            \"*\",\n            \"/\",\n            \"%\"\n        ],\n        [\n            \"+\",\n            \"-\"\n        ],\n        [\n            \"<\",\n            \"<=\",\n            \">\",\n            \">=\"\n        ],\n        [\n            \"==\",\n            \"!=\"\n        ],\n        [\n            \"&&\"\n        ],\n        [\n            \"||\",\n            \"??\"\n        ]\n    ],\n    operatorsPrefix: [\n        \"!\",\n        \"n\"\n    ],\n    literals: {\n        '\"': '\"',\n        \"`\": \"`\",\n        \"'\": \"'\",\n        \"[\": \"]\"\n    },\n    numberRx: /^(?:[0-9]*(\\.[0-9]*)?){1}$/,\n    tokenRx: /^[\\w\\$\\#\\.\\@\\:\\{\\}]+$/,\n    symbol: Symbol(\"formula\"),\n    settings: Symbol(\"settings\")\n};\nexports.Parser = class {\n    constructor(string, options = {}){\n        if (!options[internals.settings] && options.constants) {\n            for(const constant in options.constants){\n                const value = options.constants[constant];\n                if (value !== null && ![\n                    \"boolean\",\n                    \"number\",\n                    \"string\"\n                ].includes(typeof value)) {\n                    throw new Error(`Formula constant ${constant} contains invalid ${typeof value} value type`);\n                }\n            }\n        }\n        this.settings = options[internals.settings] ? options : Object.assign({\n            [internals.settings]: true,\n            constants: {},\n            functions: {}\n        }, options);\n        this.single = null;\n        this._parts = null;\n        this._parse(string);\n    }\n    _parse(string) {\n        let parts = [];\n        let current = \"\";\n        let parenthesis = 0;\n        let literal = false;\n        const flush = (inner)=>{\n            if (parenthesis) {\n                throw new Error(\"Formula missing closing parenthesis\");\n            }\n            const last = parts.length ? parts[parts.length - 1] : null;\n            if (!literal && !current && !inner) {\n                return;\n            }\n            if (last && last.type === \"reference\" && inner === \")\") {\n                last.type = \"function\";\n                last.value = this._subFormula(current, last.value);\n                current = \"\";\n                return;\n            }\n            if (inner === \")\") {\n                const sub = new exports.Parser(current, this.settings);\n                parts.push({\n                    type: \"segment\",\n                    value: sub\n                });\n            } else if (literal) {\n                if (literal === \"]\") {\n                    parts.push({\n                        type: \"reference\",\n                        value: current\n                    });\n                    current = \"\";\n                    return;\n                }\n                parts.push({\n                    type: \"literal\",\n                    value: current\n                }); // Literal\n            } else if (internals.operatorCharacters.includes(current)) {\n                if (last && last.type === \"operator\" && internals.operators.includes(last.value + current)) {\n                    last.value += current;\n                } else {\n                    parts.push({\n                        type: \"operator\",\n                        value: current\n                    });\n                }\n            } else if (current.match(internals.numberRx)) {\n                parts.push({\n                    type: \"constant\",\n                    value: parseFloat(current)\n                });\n            } else if (this.settings.constants[current] !== undefined) {\n                parts.push({\n                    type: \"constant\",\n                    value: this.settings.constants[current]\n                });\n            } else {\n                if (!current.match(internals.tokenRx)) {\n                    throw new Error(`Formula contains invalid token: ${current}`);\n                }\n                parts.push({\n                    type: \"reference\",\n                    value: current\n                });\n            }\n            current = \"\";\n        };\n        for (const c of string){\n            if (literal) {\n                if (c === literal) {\n                    flush();\n                    literal = false;\n                } else {\n                    current += c;\n                }\n            } else if (parenthesis) {\n                if (c === \"(\") {\n                    current += c;\n                    ++parenthesis;\n                } else if (c === \")\") {\n                    --parenthesis;\n                    if (!parenthesis) {\n                        flush(c);\n                    } else {\n                        current += c;\n                    }\n                } else {\n                    current += c;\n                }\n            } else if (c in internals.literals) {\n                literal = internals.literals[c];\n            } else if (c === \"(\") {\n                flush();\n                ++parenthesis;\n            } else if (internals.operatorCharacters.includes(c)) {\n                flush();\n                current = c;\n                flush();\n            } else if (c !== \" \") {\n                current += c;\n            } else {\n                flush();\n            }\n        }\n        flush();\n        // Replace prefix - to internal negative operator\n        parts = parts.map((part, i)=>{\n            if (part.type !== \"operator\" || part.value !== \"-\" || i && parts[i - 1].type !== \"operator\") {\n                return part;\n            }\n            return {\n                type: \"operator\",\n                value: \"n\"\n            };\n        });\n        // Validate tokens order\n        let operator = false;\n        for (const part of parts){\n            if (part.type === \"operator\") {\n                if (internals.operatorsPrefix.includes(part.value)) {\n                    continue;\n                }\n                if (!operator) {\n                    throw new Error(\"Formula contains an operator in invalid position\");\n                }\n                if (!internals.operators.includes(part.value)) {\n                    throw new Error(`Formula contains an unknown operator ${part.value}`);\n                }\n            } else if (operator) {\n                throw new Error(\"Formula missing expected operator\");\n            }\n            operator = !operator;\n        }\n        if (!operator) {\n            throw new Error(\"Formula contains invalid trailing operator\");\n        }\n        // Identify single part\n        if (parts.length === 1 && [\n            \"reference\",\n            \"literal\",\n            \"constant\"\n        ].includes(parts[0].type)) {\n            this.single = {\n                type: parts[0].type === \"reference\" ? \"reference\" : \"value\",\n                value: parts[0].value\n            };\n        }\n        // Process parts\n        this._parts = parts.map((part)=>{\n            // Operators\n            if (part.type === \"operator\") {\n                return internals.operatorsPrefix.includes(part.value) ? part : part.value;\n            }\n            // Literals, constants, segments\n            if (part.type !== \"reference\") {\n                return part.value;\n            }\n            // References\n            if (this.settings.tokenRx && !this.settings.tokenRx.test(part.value)) {\n                throw new Error(`Formula contains invalid reference ${part.value}`);\n            }\n            if (this.settings.reference) {\n                return this.settings.reference(part.value);\n            }\n            return internals.reference(part.value);\n        });\n    }\n    _subFormula(string, name) {\n        const method = this.settings.functions[name];\n        if (typeof method !== \"function\") {\n            throw new Error(`Formula contains unknown function ${name}`);\n        }\n        let args = [];\n        if (string) {\n            let current = \"\";\n            let parenthesis = 0;\n            let literal = false;\n            const flush = ()=>{\n                if (!current) {\n                    throw new Error(`Formula contains function ${name} with invalid arguments ${string}`);\n                }\n                args.push(current);\n                current = \"\";\n            };\n            for(let i = 0; i < string.length; ++i){\n                const c = string[i];\n                if (literal) {\n                    current += c;\n                    if (c === literal) {\n                        literal = false;\n                    }\n                } else if (c in internals.literals && !parenthesis) {\n                    current += c;\n                    literal = internals.literals[c];\n                } else if (c === \",\" && !parenthesis) {\n                    flush();\n                } else {\n                    current += c;\n                    if (c === \"(\") {\n                        ++parenthesis;\n                    } else if (c === \")\") {\n                        --parenthesis;\n                    }\n                }\n            }\n            flush();\n        }\n        args = args.map((arg)=>new exports.Parser(arg, this.settings));\n        return function(context) {\n            const innerValues = [];\n            for (const arg of args){\n                innerValues.push(arg.evaluate(context));\n            }\n            return method.call(context, ...innerValues);\n        };\n    }\n    evaluate(context) {\n        const parts = this._parts.slice();\n        // Prefix operators\n        for(let i = parts.length - 2; i >= 0; --i){\n            const part = parts[i];\n            if (part && part.type === \"operator\") {\n                const current = parts[i + 1];\n                parts.splice(i + 1, 1);\n                const value = internals.evaluate(current, context);\n                parts[i] = internals.single(part.value, value);\n            }\n        }\n        // Left-right operators\n        internals.operatorsOrder.forEach((set)=>{\n            for(let i = 1; i < parts.length - 1;){\n                if (set.includes(parts[i])) {\n                    const operator = parts[i];\n                    const left = internals.evaluate(parts[i - 1], context);\n                    const right = internals.evaluate(parts[i + 1], context);\n                    parts.splice(i, 2);\n                    const result = internals.calculate(operator, left, right);\n                    parts[i - 1] = result === 0 ? 0 : result; // Convert -0\n                } else {\n                    i += 2;\n                }\n            }\n        });\n        return internals.evaluate(parts[0], context);\n    }\n};\nexports.Parser.prototype[internals.symbol] = true;\ninternals.reference = function(name) {\n    return function(context) {\n        return context && context[name] !== undefined ? context[name] : null;\n    };\n};\ninternals.evaluate = function(part, context) {\n    if (part === null) {\n        return null;\n    }\n    if (typeof part === \"function\") {\n        return part(context);\n    }\n    if (part[internals.symbol]) {\n        return part.evaluate(context);\n    }\n    return part;\n};\ninternals.single = function(operator, value) {\n    if (operator === \"!\") {\n        return value ? false : true;\n    }\n    // operator === 'n'\n    const negative = -value;\n    if (negative === 0) {\n        return 0;\n    }\n    return negative;\n};\ninternals.calculate = function(operator, left, right) {\n    if (operator === \"??\") {\n        return internals.exists(left) ? left : right;\n    }\n    if (typeof left === \"string\" || typeof right === \"string\") {\n        if (operator === \"+\") {\n            left = internals.exists(left) ? left : \"\";\n            right = internals.exists(right) ? right : \"\";\n            return left + right;\n        }\n    } else {\n        switch(operator){\n            case \"^\":\n                return Math.pow(left, right);\n            case \"*\":\n                return left * right;\n            case \"/\":\n                return left / right;\n            case \"%\":\n                return left % right;\n            case \"+\":\n                return left + right;\n            case \"-\":\n                return left - right;\n        }\n    }\n    switch(operator){\n        case \"<\":\n            return left < right;\n        case \"<=\":\n            return left <= right;\n        case \">\":\n            return left > right;\n        case \">=\":\n            return left >= right;\n        case \"==\":\n            return left === right;\n        case \"!=\":\n            return left !== right;\n        case \"&&\":\n            return left && right;\n        case \"||\":\n            return left || right;\n    }\n    return null;\n};\ninternals.exists = function(value) {\n    return value !== null && value !== undefined;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sideway/formula/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sideway/pinpoint/lib/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sideway/pinpoint/lib/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nconst internals = {};\nexports.location = function(depth = 0) {\n    const orig = Error.prepareStackTrace;\n    Error.prepareStackTrace = (ignore, stack)=>stack;\n    const capture = {};\n    Error.captureStackTrace(capture, this);\n    const line = capture.stack[depth + 1];\n    Error.prepareStackTrace = orig;\n    return {\n        filename: line.getFileName(),\n        line: line.getLineNumber()\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNpZGV3YXkvcGlucG9pbnQvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsWUFBWSxDQUFDO0FBR25CQyxnQkFBZ0IsR0FBRyxTQUFVRSxRQUFRLENBQUM7SUFFbEMsTUFBTUMsT0FBT0MsTUFBTUMsaUJBQWlCO0lBQ3BDRCxNQUFNQyxpQkFBaUIsR0FBRyxDQUFDQyxRQUFRQyxRQUFVQTtJQUU3QyxNQUFNQyxVQUFVLENBQUM7SUFDakJKLE1BQU1LLGlCQUFpQixDQUFDRCxTQUFTLElBQUk7SUFDckMsTUFBTUUsT0FBT0YsUUFBUUQsS0FBSyxDQUFDTCxRQUFRLEVBQUU7SUFFckNFLE1BQU1DLGlCQUFpQixHQUFHRjtJQUUxQixPQUFPO1FBQ0hRLFVBQVVELEtBQUtFLFdBQVc7UUFDMUJGLE1BQU1BLEtBQUtHLGFBQWE7SUFDNUI7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvY2tldGgvLi9ub2RlX21vZHVsZXMvQHNpZGV3YXkvcGlucG9pbnQvbGliL2luZGV4LmpzPzYwYWMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBpbnRlcm5hbHMgPSB7fTtcblxuXG5leHBvcnRzLmxvY2F0aW9uID0gZnVuY3Rpb24gKGRlcHRoID0gMCkge1xuXG4gICAgY29uc3Qgb3JpZyA9IEVycm9yLnByZXBhcmVTdGFja1RyYWNlO1xuICAgIEVycm9yLnByZXBhcmVTdGFja1RyYWNlID0gKGlnbm9yZSwgc3RhY2spID0+IHN0YWNrO1xuXG4gICAgY29uc3QgY2FwdHVyZSA9IHt9O1xuICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKGNhcHR1cmUsIHRoaXMpO1xuICAgIGNvbnN0IGxpbmUgPSBjYXB0dXJlLnN0YWNrW2RlcHRoICsgMV07XG5cbiAgICBFcnJvci5wcmVwYXJlU3RhY2tUcmFjZSA9IG9yaWc7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBmaWxlbmFtZTogbGluZS5nZXRGaWxlTmFtZSgpLFxuICAgICAgICBsaW5lOiBsaW5lLmdldExpbmVOdW1iZXIoKVxuICAgIH07XG59O1xuIl0sIm5hbWVzIjpbImludGVybmFscyIsImV4cG9ydHMiLCJsb2NhdGlvbiIsImRlcHRoIiwib3JpZyIsIkVycm9yIiwicHJlcGFyZVN0YWNrVHJhY2UiLCJpZ25vcmUiLCJzdGFjayIsImNhcHR1cmUiLCJjYXB0dXJlU3RhY2tUcmFjZSIsImxpbmUiLCJmaWxlbmFtZSIsImdldEZpbGVOYW1lIiwiZ2V0TGluZU51bWJlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sideway/pinpoint/lib/index.js\n");

/***/ })

};
;