/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/brorand";
exports.ids = ["vendor-chunks/brorand"];
exports.modules = {

/***/ "(ssr)/./node_modules/brorand/index.js":
/*!***************************************!*\
  !*** ./node_modules/brorand/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var r;\nmodule.exports = function rand(len) {\n    if (!r) r = new Rand(null);\n    return r.generate(len);\n};\nfunction Rand(rand) {\n    this.rand = rand;\n}\nmodule.exports.Rand = Rand;\nRand.prototype.generate = function generate(len) {\n    return this._rand(len);\n};\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n    if (this.rand.getBytes) return this.rand.getBytes(n);\n    var res = new Uint8Array(n);\n    for(var i = 0; i < res.length; i++)res[i] = this.rand.getByte();\n    return res;\n};\nif (typeof self === \"object\") {\n    if (self.crypto && self.crypto.getRandomValues) {\n        // Modern browsers\n        Rand.prototype._rand = function _rand(n) {\n            var arr = new Uint8Array(n);\n            self.crypto.getRandomValues(arr);\n            return arr;\n        };\n    } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n        // IE\n        Rand.prototype._rand = function _rand(n) {\n            var arr = new Uint8Array(n);\n            self.msCrypto.getRandomValues(arr);\n            return arr;\n        };\n    // Safari's WebWorkers do not have `crypto`\n    } else if (false) {}\n} else {\n    // Node.js or Web worker with no crypto support\n    try {\n        var crypto = __webpack_require__(/*! crypto */ \"crypto\");\n        if (typeof crypto.randomBytes !== \"function\") throw new Error(\"Not supported\");\n        Rand.prototype._rand = function _rand(n) {\n            return crypto.randomBytes(n);\n        };\n    } catch (e) {}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJvcmFuZC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQTtBQUVKQyxPQUFPQyxPQUFPLEdBQUcsU0FBU0MsS0FBS0MsR0FBRztJQUNoQyxJQUFJLENBQUNKLEdBQ0hBLElBQUksSUFBSUssS0FBSztJQUVmLE9BQU9MLEVBQUVNLFFBQVEsQ0FBQ0Y7QUFDcEI7QUFFQSxTQUFTQyxLQUFLRixJQUFJO0lBQ2hCLElBQUksQ0FBQ0EsSUFBSSxHQUFHQTtBQUNkO0FBQ0FGLG1CQUFtQixHQUFHSTtBQUV0QkEsS0FBS0UsU0FBUyxDQUFDRCxRQUFRLEdBQUcsU0FBU0EsU0FBU0YsR0FBRztJQUM3QyxPQUFPLElBQUksQ0FBQ0ksS0FBSyxDQUFDSjtBQUNwQjtBQUVBLGlDQUFpQztBQUNqQ0MsS0FBS0UsU0FBUyxDQUFDQyxLQUFLLEdBQUcsU0FBU0EsTUFBTUMsQ0FBQztJQUNyQyxJQUFJLElBQUksQ0FBQ04sSUFBSSxDQUFDTyxRQUFRLEVBQ3BCLE9BQU8sSUFBSSxDQUFDUCxJQUFJLENBQUNPLFFBQVEsQ0FBQ0Q7SUFFNUIsSUFBSUUsTUFBTSxJQUFJQyxXQUFXSDtJQUN6QixJQUFLLElBQUlJLElBQUksR0FBR0EsSUFBSUYsSUFBSUcsTUFBTSxFQUFFRCxJQUM5QkYsR0FBRyxDQUFDRSxFQUFFLEdBQUcsSUFBSSxDQUFDVixJQUFJLENBQUNZLE9BQU87SUFDNUIsT0FBT0o7QUFDVDtBQUVBLElBQUksT0FBT0ssU0FBUyxVQUFVO0lBQzVCLElBQUlBLEtBQUtDLE1BQU0sSUFBSUQsS0FBS0MsTUFBTSxDQUFDQyxlQUFlLEVBQUU7UUFDOUMsa0JBQWtCO1FBQ2xCYixLQUFLRSxTQUFTLENBQUNDLEtBQUssR0FBRyxTQUFTQSxNQUFNQyxDQUFDO1lBQ3JDLElBQUlVLE1BQU0sSUFBSVAsV0FBV0g7WUFDekJPLEtBQUtDLE1BQU0sQ0FBQ0MsZUFBZSxDQUFDQztZQUM1QixPQUFPQTtRQUNUO0lBQ0YsT0FBTyxJQUFJSCxLQUFLSSxRQUFRLElBQUlKLEtBQUtJLFFBQVEsQ0FBQ0YsZUFBZSxFQUFFO1FBQ3pELEtBQUs7UUFDTGIsS0FBS0UsU0FBUyxDQUFDQyxLQUFLLEdBQUcsU0FBU0EsTUFBTUMsQ0FBQztZQUNyQyxJQUFJVSxNQUFNLElBQUlQLFdBQVdIO1lBQ3pCTyxLQUFLSSxRQUFRLENBQUNGLGVBQWUsQ0FBQ0M7WUFDOUIsT0FBT0E7UUFDVDtJQUVGLDJDQUEyQztJQUMzQyxPQUFPLElBQUksS0FBa0IsRUFBVSxFQUt0QztBQUNILE9BQU87SUFDTCwrQ0FBK0M7SUFDL0MsSUFBSTtRQUNGLElBQUlGLFNBQVNLLG1CQUFPQSxDQUFDO1FBQ3JCLElBQUksT0FBT0wsT0FBT00sV0FBVyxLQUFLLFlBQ2hDLE1BQU0sSUFBSUYsTUFBTTtRQUVsQmhCLEtBQUtFLFNBQVMsQ0FBQ0MsS0FBSyxHQUFHLFNBQVNBLE1BQU1DLENBQUM7WUFDckMsT0FBT1EsT0FBT00sV0FBVyxDQUFDZDtRQUM1QjtJQUNGLEVBQUUsT0FBT2UsR0FBRyxDQUNaO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb2NrZXRoLy4vbm9kZV9tb2R1bGVzL2Jyb3JhbmQvaW5kZXguanM/NjUwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiByYW5kKGxlbikge1xuICBpZiAoIXIpXG4gICAgciA9IG5ldyBSYW5kKG51bGwpO1xuXG4gIHJldHVybiByLmdlbmVyYXRlKGxlbik7XG59O1xuXG5mdW5jdGlvbiBSYW5kKHJhbmQpIHtcbiAgdGhpcy5yYW5kID0gcmFuZDtcbn1cbm1vZHVsZS5leHBvcnRzLlJhbmQgPSBSYW5kO1xuXG5SYW5kLnByb3RvdHlwZS5nZW5lcmF0ZSA9IGZ1bmN0aW9uIGdlbmVyYXRlKGxlbikge1xuICByZXR1cm4gdGhpcy5fcmFuZChsZW4pO1xufTtcblxuLy8gRW11bGF0ZSBjcnlwdG8gQVBJIHVzaW5nIHJhbmR5XG5SYW5kLnByb3RvdHlwZS5fcmFuZCA9IGZ1bmN0aW9uIF9yYW5kKG4pIHtcbiAgaWYgKHRoaXMucmFuZC5nZXRCeXRlcylcbiAgICByZXR1cm4gdGhpcy5yYW5kLmdldEJ5dGVzKG4pO1xuXG4gIHZhciByZXMgPSBuZXcgVWludDhBcnJheShuKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXMubGVuZ3RoOyBpKyspXG4gICAgcmVzW2ldID0gdGhpcy5yYW5kLmdldEJ5dGUoKTtcbiAgcmV0dXJuIHJlcztcbn07XG5cbmlmICh0eXBlb2Ygc2VsZiA9PT0gJ29iamVjdCcpIHtcbiAgaWYgKHNlbGYuY3J5cHRvICYmIHNlbGYuY3J5cHRvLmdldFJhbmRvbVZhbHVlcykge1xuICAgIC8vIE1vZGVybiBicm93c2Vyc1xuICAgIFJhbmQucHJvdG90eXBlLl9yYW5kID0gZnVuY3Rpb24gX3JhbmQobikge1xuICAgICAgdmFyIGFyciA9IG5ldyBVaW50OEFycmF5KG4pO1xuICAgICAgc2VsZi5jcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKGFycik7XG4gICAgICByZXR1cm4gYXJyO1xuICAgIH07XG4gIH0gZWxzZSBpZiAoc2VsZi5tc0NyeXB0byAmJiBzZWxmLm1zQ3J5cHRvLmdldFJhbmRvbVZhbHVlcykge1xuICAgIC8vIElFXG4gICAgUmFuZC5wcm90b3R5cGUuX3JhbmQgPSBmdW5jdGlvbiBfcmFuZChuKSB7XG4gICAgICB2YXIgYXJyID0gbmV3IFVpbnQ4QXJyYXkobik7XG4gICAgICBzZWxmLm1zQ3J5cHRvLmdldFJhbmRvbVZhbHVlcyhhcnIpO1xuICAgICAgcmV0dXJuIGFycjtcbiAgICB9O1xuXG4gIC8vIFNhZmFyaSdzIFdlYldvcmtlcnMgZG8gbm90IGhhdmUgYGNyeXB0b2BcbiAgfSBlbHNlIGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0Jykge1xuICAgIC8vIE9sZCBqdW5rXG4gICAgUmFuZC5wcm90b3R5cGUuX3JhbmQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignTm90IGltcGxlbWVudGVkIHlldCcpO1xuICAgIH07XG4gIH1cbn0gZWxzZSB7XG4gIC8vIE5vZGUuanMgb3IgV2ViIHdvcmtlciB3aXRoIG5vIGNyeXB0byBzdXBwb3J0XG4gIHRyeSB7XG4gICAgdmFyIGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpO1xuICAgIGlmICh0eXBlb2YgY3J5cHRvLnJhbmRvbUJ5dGVzICE9PSAnZnVuY3Rpb24nKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdOb3Qgc3VwcG9ydGVkJyk7XG5cbiAgICBSYW5kLnByb3RvdHlwZS5fcmFuZCA9IGZ1bmN0aW9uIF9yYW5kKG4pIHtcbiAgICAgIHJldHVybiBjcnlwdG8ucmFuZG9tQnl0ZXMobik7XG4gICAgfTtcbiAgfSBjYXRjaCAoZSkge1xuICB9XG59XG4iXSwibmFtZXMiOlsiciIsIm1vZHVsZSIsImV4cG9ydHMiLCJyYW5kIiwibGVuIiwiUmFuZCIsImdlbmVyYXRlIiwicHJvdG90eXBlIiwiX3JhbmQiLCJuIiwiZ2V0Qnl0ZXMiLCJyZXMiLCJVaW50OEFycmF5IiwiaSIsImxlbmd0aCIsImdldEJ5dGUiLCJzZWxmIiwiY3J5cHRvIiwiZ2V0UmFuZG9tVmFsdWVzIiwiYXJyIiwibXNDcnlwdG8iLCJFcnJvciIsInJlcXVpcmUiLCJyYW5kb21CeXRlcyIsImUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/brorand/index.js\n");

/***/ })

};
;